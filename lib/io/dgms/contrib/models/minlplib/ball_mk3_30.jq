jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/ball_mk3_30";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:ball_mk3_30($input)
{
    let $i2 := $input.i2
    let $i3 := $input.i3
    let $i4 := $input.i4
    let $i5 := $input.i5
    let $i6 := $input.i6
    let $i7 := $input.i7
    let $i8 := $input.i8
    let $i9 := $input.i9
    let $i10 := $input.i10
    let $i11 := $input.i11
    let $i12 := $input.i12
    let $i13 := $input.i13
    let $i14 := $input.i14
    let $i15 := $input.i15
    let $i16 := $input.i16
    let $i17 := $input.i17
    let $i18 := $input.i18
    let $i19 := $input.i19
    let $i20 := $input.i20
    let $i21 := $input.i21
    let $i22 := $input.i22
    let $i23 := $input.i23
    let $i24 := $input.i24
    let $i25 := $input.i25
    let $i26 := $input.i26
    let $i27 := $input.i27
    let $i28 := $input.i28
    let $i29 := $input.i29
    let $i30 := $input.i30
    let $i31 := $input.i31
    return {
        "obj": -((((((((((((((((((((((((((((($i2 - $i3) - $i4) - $i5) - $i6) - $i7) - $i8) - $i9) - $i10) - $i11) - $i12) - $i13) - $i14) - $i15) - $i16) - $i17) - $i18) - $i19) - $i20) - $i21) - $i22) - $i23) - $i24) - $i25) - $i26) - $i27) - $i28) - $i29) - $i30) - $i31),
        "constraints": {
            "e2": ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0.0394468602581308 * math:pow($i30, 2.0)) - (0.0394468602581308 * $i30)) + (0.016482781963216 * math:pow($i29, 2.0))) - (0.016482781963216 * $i29)) + (0.0565703047972114 * math:pow($i28, 2.0))) - (0.0565703047972114 * $i28)) + (0.0585014464120386 * math:pow($i27, 2.0))) - (0.0585014464120386 * $i27)) + (0.0118746308986698 * math:pow($i26, 2.0))) - (0.0118746308986698 * $i26)) + (0.0451913403894453 * math:pow($i25, 2.0))) - (0.0451913403894453 * $i25)) + (0.0362882980369683 * math:pow($i24, 2.0))) - (0.0362882980369683 * $i24)) + (0.0204948265573191 * math:pow($i23, 2.0))) - (0.0204948265573191 * $i23)) + (0.0252301288903778 * math:pow($i22, 2.0))) - (0.0252301288903778 * $i22)) + (0.0283867992035166 * math:pow($i21, 2.0))) - (0.0283867992035166 * $i21)) + (0.0425137327561133 * math:pow($i20, 2.0))) - (0.0425137327561133 * $i20)) + (0.037617677558166 * math:pow($i19, 2.0))) - (0.037617677558166 * $i19)) + (0.0576726558598861 * math:pow($i18, 2.0))) - (0.0576726558598861 * $i18)) + (0.0259924550955063 * math:pow($i17, 2.0))) - (0.0259924550955063 * $i17)) + (0.00625392202854311 * math:pow($i16, 2.0))) - (0.00625392202854311 * $i16)) + (0.0474635696658564 * math:pow($i15, 2.0))) - (0.0474635696658564 * $i15)) + (0.030733721879364 * math:pow($i14, 2.0))) - (0.030733721879364 * $i14)) + (0.015401148979499 * math:pow($i13, 2.0))) - (0.015401148979499 * $i13)) + (0.049224183717334 * math:pow($i12, 2.0))) - (0.049224183717334 * $i12)) + (0.0519656343340015 * math:pow($i11, 2.0))) - (0.0519656343340015 * $i11)) + (0.0384040110374736 * math:pow($i10, 2.0))) - (0.0384040110374736 * $i10)) + (0.0172067356549738 * math:pow($i9, 2.0))) - (0.0172067356549738 * $i9)) + (0.019974781798624 * math:pow($i8, 2.0))) - (0.019974781798624 * $i8)) + (0.0352372440378746 * math:pow($i7, 2.0))) - (0.0352372440378746 * $i7)) + (0.0152163994975552 * math:pow($i6, 2.0))) - (0.0152163994975552 * $i6)) + (0.0075711399569244 * math:pow($i5, 2.0))) - (0.0075711399569244 * $i5)) + (0.0243048911732161 * math:pow($i4, 2.0))) - (0.0243048911732161 * $i4)) + (0.0502208123501935 * math:pow($i3, 2.0))) - (0.0502208123501935 * $i3)) + (0.041161312091797 * math:pow($i2, 2.0))) - (0.041161312091797 * $i2)) + (0.0473965531202045 * math:pow($i31, 2.0))) - (0.0473965531202045 * $i31)) <= -9.99999999999612E-5
        }
    }
};


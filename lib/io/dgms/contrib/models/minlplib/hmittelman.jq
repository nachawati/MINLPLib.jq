jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/hmittelman";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:hmittelman($input)
{
    let $b1 := $input.b1
    let $b2 := $input.b2
    let $b3 := $input.b3
    let $b4 := $input.b4
    let $b5 := $input.b5
    let $b6 := $input.b6
    let $b7 := $input.b7
    let $b8 := $input.b8
    let $b9 := $input.b9
    let $b10 := $input.b10
    let $b11 := $input.b11
    let $b12 := $input.b12
    let $b13 := $input.b13
    let $b14 := $input.b14
    let $b15 := $input.b15
    let $b16 := $input.b16
    return {
        "obj": (((((((((((((((10.0 * $b5) * $b7) * $b9) * $b10) * $b14) * $b15) * $b16) + ((((((7.0 * $b1) * $b2) * $b3) * $b4) * $b8) * $b11)) + (((($b3 * $b4) * $b6) * $b7) * $b8)) + ((((12.0 * $b3) * $b4) * $b8) * $b11)) + ((((8.0 * $b6) * $b7) * $b8) * $b12)) + (((((3.0 * $b6) * $b7) * $b9) * $b14) * $b16)) + ((($b9 * $b10) * $b14) * $b16)) + (((((5.0 * $b5) * $b10) * $b14) * $b15) * $b16)) + ((((3.0 * $b1) * $b2) * $b11) * $b12)),
        "constraints": {
            "e2": ((((((((((((3.0 * $b5) * $b7) * $b9) * $b10) * $b14) * $b15) * $b16) - ((((((12.0 * $b1) * $b2) * $b3) * $b4) * $b8) * $b11)) - (((((8.0 * $b3) * $b4) * $b6) * $b7) * $b8)) + ((($b3 * $b4) * $b8) * $b11)) - ((((7.0 * $b1) * $b2) * $b11) * $b12)) + ((((2.0 * $b13) * $b14) * $b15) * $b16)) <= -2.0,
            "e3": (((((((((($b1 * $b2) * $b3) * $b4) * $b8) * $b11) - (((((10.0 * $b3) * $b4) * $b6) * $b7) * $b8)) - ((((5.0 * $b6) * $b7) * $b8) * $b12)) + (((($b6 * $b7) * $b9) * $b14) * $b16)) + ((((7.0 * $b9) * $b10) * $b14) * $b16)) + (((($b5 * $b10) * $b14) * $b15) * $b16)) <= -1.0,
            "e4": (((((((((((5.0 * $b5) * $b7) * $b9) * $b10) * $b14) * $b15) * $b16) - ((((((3.0 * $b1) * $b2) * $b3) * $b4) * $b8) * $b11)) - (((($b3 * $b4) * $b6) * $b7) * $b8)) - (((((2.0 * $b5) * $b10) * $b14) * $b15) * $b16)) + ((($b13 * $b14) * $b15) * $b16)) <= -1.0,
            "e5": ((((((((((3.0 * $b1) * $b2) * $b3) * $b4) * $b8) * $b11) - (((((((5.0 * $b5) * $b7) * $b9) * $b10) * $b14) * $b15) * $b16)) + (((($b3 * $b4) * $b6) * $b7) * $b8)) + (((((2.0 * $b5) * $b10) * $b14) * $b15) * $b16)) - ((($b13 * $b14) * $b15) * $b16)) <= 1.0,
            "e6": (((((-(((((4.0 * $b3) * $b4) * $b6) * $b7) * $b8) - ((((2.0 * $b3) * $b4) * $b8) * $b11)) - (((((5.0 * $b6) * $b7) * $b9) * $b14) * $b16)) + ((($b9 * $b10) * $b14) * $b16)) - (((((9.0 * $b5) * $b10) * $b14) * $b15) * $b16)) - ((((2.0 * $b1) * $b2) * $b11) * $b12)) <= -3.0,
            "e7": ((((((((((((9.0 * $b1) * $b2) * $b3) * $b4) * $b8) * $b11) - ((((12.0 * $b3) * $b4) * $b8) * $b11)) - ((((7.0 * $b6) * $b7) * $b8) * $b12)) + (((((6.0 * $b6) * $b7) * $b9) * $b14) * $b16)) + (((((2.0 * $b5) * $b10) * $b14) * $b15) * $b16)) - ((((15.0 * $b1) * $b2) * $b11) * $b12)) + ((((3.0 * $b13) * $b14) * $b15) * $b16)) <= -7.0,
            "e8": ((((((((((((5.0 * $b1) * $b2) * $b3) * $b4) * $b8) * $b11) - (((((((8.0 * $b5) * $b7) * $b9) * $b10) * $b14) * $b15) * $b16)) + (((((2.0 * $b3) * $b4) * $b6) * $b7) * $b8)) - ((((7.0 * $b3) * $b4) * $b8) * $b11)) - ((($b6 * $b7) * $b8) * $b12)) - ((((5.0 * $b9) * $b10) * $b14) * $b16)) - ((((10.0 * $b1) * $b2) * $b11) * $b12)) <= -1.0
        }
    }
};


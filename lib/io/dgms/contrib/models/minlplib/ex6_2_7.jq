jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/ex6_2_7";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:ex6_2_7($input)
{
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    return {
        "obj": ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((math:log((((2.4088 * $x2) + (8.8495 * $x5)) + (2.0086 * $x8))) * (((10.4807341082197 * $x2) + (38.5043409542885 * $x5)) + (8.73945638067505 * $x8))) + (0.102582206615077 * $x2)) - (4.55292602721008 * $x5)) + (0.0196376909050935 * $x8)) + ((0.240734108219679 * math:log($x2)) * $x2)) + ((2.64434095428848 * math:log($x5)) * $x5)) + ((0.399456380675047 * math:log($x8)) * $x8)) - ((0.240734108219679 * math:log((((2.4088 * $x2) + (8.8495 * $x5)) + (2.0086 * $x8)))) * $x2)) - ((2.64434095428848 * math:log((((2.4088 * $x2) + (8.8495 * $x5)) + (2.0086 * $x8)))) * $x5)) - ((0.399456380675047 * math:log((((2.4088 * $x2) + (8.8495 * $x5)) + (2.0086 * $x8)))) * $x8)) + ((11.24 * math:log($x2)) * $x2)) + ((36.86 * math:log($x5)) * $x5)) + ((9.34 * math:log($x8)) * $x8)) - ((11.24 * math:log((((2.248 * $x2) + (7.372 * $x5)) + (1.868 * $x8)))) * $x2)) - ((36.86 * math:log((((2.248 * $x2) + (7.372 * $x5)) + (1.868 * $x8)))) * $x5)) - ((9.34 * math:log((((2.248 * $x2) + (7.372 * $x5)) + (1.868 * $x8)))) * $x8)) + (math:log((((2.248 * $x2) + (7.372 * $x5)) + (1.868 * $x8))) * (((2.248 * $x2) + (7.372 * $x5)) + (1.868 * $x8)))) + ((2.248 * math:log($x2)) * $x2)) + ((7.372 * math:log($x5)) * $x5)) + ((1.868 * math:log($x8)) * $x8)) - ((2.248 * math:log((((2.248 * $x2) + (5.82088173817021 * $x5)) + (0.382446861901943 * $x8)))) * $x2)) - ((7.372 * math:log((((0.972461133672523 * $x2) + (7.372 * $x5)) + (1.1893141713454 * $x8)))) * $x5)) - ((1.868 * math:log((((1.86752460515164 * $x2) + (2.61699842799583 * $x5)) + (1.868 * $x8)))) * $x8)) + (math:log((((2.4088 * $x3) + (8.8495 * $x6)) + (2.0086 * $x9))) * (((10.4807341082197 * $x3) + (38.5043409542885 * $x6)) + (8.73945638067505 * $x9)))) + (0.102582206615077 * $x3)) - (4.55292602721008 * $x6)) + (0.0196376909050935 * $x9)) + ((0.240734108219679 * math:log($x3)) * $x3)) + ((2.64434095428848 * math:log($x6)) * $x6)) + ((0.399456380675047 * math:log($x9)) * $x9)) - ((0.240734108219679 * math:log((((2.4088 * $x3) + (8.8495 * $x6)) + (2.0086 * $x9)))) * $x3)) - ((2.64434095428848 * math:log((((2.4088 * $x3) + (8.8495 * $x6)) + (2.0086 * $x9)))) * $x6)) - ((0.399456380675047 * math:log((((2.4088 * $x3) + (8.8495 * $x6)) + (2.0086 * $x9)))) * $x9)) + ((11.24 * math:log($x3)) * $x3)) + ((36.86 * math:log($x6)) * $x6)) + ((9.34 * math:log($x9)) * $x9)) - ((11.24 * math:log((((2.248 * $x3) + (7.372 * $x6)) + (1.868 * $x9)))) * $x3)) - ((36.86 * math:log((((2.248 * $x3) + (7.372 * $x6)) + (1.868 * $x9)))) * $x6)) - ((9.34 * math:log((((2.248 * $x3) + (7.372 * $x6)) + (1.868 * $x9)))) * $x9)) + (math:log((((2.248 * $x3) + (7.372 * $x6)) + (1.868 * $x9))) * (((2.248 * $x3) + (7.372 * $x6)) + (1.868 * $x9)))) + ((2.248 * math:log($x3)) * $x3)) + ((7.372 * math:log($x6)) * $x6)) + ((1.868 * math:log($x9)) * $x9)) - ((2.248 * math:log((((2.248 * $x3) + (5.82088173817021 * $x6)) + (0.382446861901943 * $x9)))) * $x3)) - ((7.372 * math:log((((0.972461133672523 * $x3) + (7.372 * $x6)) + (1.1893141713454 * $x9)))) * $x6)) - ((1.868 * math:log((((1.86752460515164 * $x3) + (2.61699842799583 * $x6)) + (1.868 * $x9)))) * $x9)) + (math:log((((2.4088 * $x4) + (8.8495 * $x7)) + (2.0086 * $x10))) * (((10.4807341082197 * $x4) + (38.5043409542885 * $x7)) + (8.73945638067505 * $x10)))) + (0.102582206615077 * $x4)) - (4.55292602721008 * $x7)) + (0.0196376909050935 * $x10)) + ((0.240734108219679 * math:log($x4)) * $x4)) + ((2.64434095428848 * math:log($x7)) * $x7)) + ((0.399456380675047 * math:log($x10)) * $x10)) - ((0.240734108219679 * math:log((((2.4088 * $x4) + (8.8495 * $x7)) + (2.0086 * $x10)))) * $x4)) - ((2.64434095428848 * math:log((((2.4088 * $x4) + (8.8495 * $x7)) + (2.0086 * $x10)))) * $x7)) - ((0.399456380675047 * math:log((((2.4088 * $x4) + (8.8495 * $x7)) + (2.0086 * $x10)))) * $x10)) + ((11.24 * math:log($x4)) * $x4)) + ((36.86 * math:log($x7)) * $x7)) + ((9.34 * math:log($x10)) * $x10)) - ((11.24 * math:log((((2.248 * $x4) + (7.372 * $x7)) + (1.868 * $x10)))) * $x4)) - ((36.86 * math:log((((2.248 * $x4) + (7.372 * $x7)) + (1.868 * $x10)))) * $x7)) - ((9.34 * math:log((((2.248 * $x4) + (7.372 * $x7)) + (1.868 * $x10)))) * $x10)) + (math:log((((2.248 * $x4) + (7.372 * $x7)) + (1.868 * $x10))) * (((2.248 * $x4) + (7.372 * $x7)) + (1.868 * $x10)))) + ((2.248 * math:log($x4)) * $x4)) + ((7.372 * math:log($x7)) * $x7)) + ((1.868 * math:log($x10)) * $x10)) - ((2.248 * math:log((((2.248 * $x4) + (5.82088173817021 * $x7)) + (0.382446861901943 * $x10)))) * $x4)) - ((7.372 * math:log((((0.972461133672523 * $x4) + (7.372 * $x7)) + (1.1893141713454 * $x10)))) * $x7)) - ((1.868 * math:log((((1.86752460515164 * $x4) + (2.61699842799583 * $x7)) + (1.868 * $x10)))) * $x10)) - ((12.7287341082197 * math:log($x2)) * $x2)) - ((45.8763409542885 * math:log($x5)) * $x5)) - ((10.607456380675 * math:log($x8)) * $x8)) - ((12.7287341082197 * math:log($x3)) * $x3)) - ((45.8763409542885 * math:log($x6)) * $x6)) - ((10.607456380675 * math:log($x9)) * $x9)) - ((12.7287341082197 * math:log($x4)) * $x4)) - ((45.8763409542885 * math:log($x7)) * $x7)) - ((10.607456380675 * math:log($x10)) * $x10)),
        "constraints": {
            "e2": (($x2 + $x3) + $x4) = 0.4,
            "e3": (($x5 + $x6) + $x7) = 0.1,
            "e4": (($x8 + $x9) + $x10) = 0.5
        }
    }
};


jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/pooling_adhya2pq";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:pooling_adhya2pq($input)
{
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    let $x31 := $input.x31
    let $x32 := $input.x32
    let $x33 := $input.x33
    let $x34 := $input.x34
    return {
        "obj": -(((((((((((((((((((9.0 * $x15) - (18.0 * $x16)) - (8.0 * $x17)) - (3.0 * $x18)) - (13.0 * $x19)) - (22.0 * $x20)) - (12.0 * $x21)) - (7.0 * $x22)) - (14.0 * $x23)) - (23.0 * $x24)) - (13.0 * $x25)) - (8.0 * $x26)) - (6.0 * $x27)) - (15.0 * $x28)) - (5.0 * $x29)) - (11.0 * $x31)) - (20.0 * $x32)) - (10.0 * $x33)) - (5.0 * $x34)),
        "constraints": {
            "e2": ((($x15 + $x16) + $x17) + $x18) <= 75.0,
            "e3": ((($x19 + $x20) + $x21) + $x22) <= 75.0,
            "e4": ((($x23 + $x24) + $x25) + $x26) <= 75.0,
            "e5": ((($x27 + $x28) + $x29) + $x30) <= 75.0,
            "e6": ((($x31 + $x32) + $x33) + $x34) <= 75.0,
            "e7": ((((((($x15 + $x16) + $x17) + $x18) + $x19) + $x20) + $x21) + $x22) <= 75.0,
            "e8": ((((((((((($x23 + $x24) + $x25) + $x26) + $x27) + $x28) + $x29) + $x30) + $x31) + $x32) + $x33) + $x34) <= 75.0,
            "e9": (((($x15 + $x19) + $x23) + $x27) + $x31) <= 10.0,
            "e10": (((($x16 + $x20) + $x24) + $x28) + $x32) <= 25.0,
            "e11": (((($x17 + $x21) + $x25) + $x29) + $x33) <= 30.0,
            "e12": (((($x18 + $x22) + $x26) + $x30) + $x34) <= 10.0,
            "e13": -((((2.0 * $x15) + $x19) + $x23) - (2.0 * $x31)) <= 0.0,
            "e14": ((((3.0 * $x15) - (2.0 * $x19)) + (2.5 * $x23)) - (0.3 * $x31)) <= 0.0,
            "e15": (((((0.75 * $x15) - (0.25 * $x19)) - (0.25 * $x23)) - (0.25 * $x27)) + (0.75 * $x31)) <= 0.0,
            "e16": -(((((0.25 * $x15) + (1.25 * $x19)) + (0.15 * $x23)) + (0.25 * $x27)) + (0.85 * $x31)) <= 0.0,
            "e17": -(((($x15 - (2.0 * $x19)) + $x23) - (3.0 * $x27)) - (3.0 * $x31)) <= 0.0,
            "e18": (((((4.0 * $x15) - $x19) + (5.0 * $x23)) - $x27) + (2.0 * $x31)) <= 0.0,
            "e19": -(((3.0 * $x16) - $x28) - (3.0 * $x32)) <= 0.0,
            "e20": (((((3.5 * $x16) - (1.5 * $x20)) + (3.0 * $x24)) + (0.5 * $x28)) + (0.2 * $x32)) <= 0.0,
            "e21": (((((0.5 * $x16) - (0.5 * $x20)) - (0.5 * $x24)) - (0.5 * $x28)) + (0.5 * $x32)) <= 0.0,
            "e22": -(((($x16 + (0.5 * $x20)) - (0.6 * $x24)) - (0.5 * $x28)) + (0.1 * $x32)) <= 0.0,
            "e23": -((((2.0 * $x16) - (3.0 * $x20)) - (4.0 * $x28)) - (4.0 * $x32)) <= 0.0,
            "e24": (((((3.0 * $x16) - (2.0 * $x20)) + (4.0 * $x24)) - (2.0 * $x28)) + $x32) <= 0.0,
            "e25": -(((((0.5 * $x17) + (2.5 * $x21)) + (2.5 * $x25)) + (1.5 * $x29)) - (0.5 * $x33)) <= 0.0,
            "e26": ((((0.5 * $x17) - (4.5 * $x21)) - (2.5 * $x29)) - (2.8 * $x33)) <= 0.0,
            "e27": (((((0.1 * $x17) - (0.9 * $x21)) - (0.9 * $x25)) - (0.9 * $x29)) + (0.1 * $x33)) <= 0.0,
            "e28": -(((((0.3 * $x17) + (1.2 * $x21)) + (0.1 * $x25)) + (0.2 * $x29)) + (0.8 * $x33)) <= 0.0,
            "e29": -((((2.0 * $x17) - (3.0 * $x21)) - (4.0 * $x29)) - (4.0 * $x33)) <= 0.0,
            "e30": (((((3.0 * $x17) - (2.0 * $x21)) + (4.0 * $x25)) - (2.0 * $x29)) + $x33) <= 0.0,
            "e31": -((((2.0 * $x18) + $x22) + $x26) - (2.0 * $x34)) <= 0.0,
            "e32": (((((2.0 * $x18) - (3.0 * $x22)) + (1.5 * $x26)) - $x30) - (1.3 * $x34)) <= 0.0,
            "e33": -(($x22 - $x26) - $x30) <= 0.0,
            "e34": -(((((1.3 * $x18) + (0.2 * $x22)) - (0.9 * $x26)) - (0.8 * $x30)) - (0.2 * $x34)) <= 0.0,
            "e35": -(((((3.0 * $x18) - (4.0 * $x22)) - $x26) - (5.0 * $x30)) - (5.0 * $x34)) <= 0.0,
            "e36": (((((3.0 * $x18) - (2.0 * $x22)) + (4.0 * $x26)) - (2.0 * $x30)) + $x34) <= 0.0,
            "e37": ($x2 + $x3) = 1.0,
            "e38": (($x4 + $x5) + $x6) = 1.0,
            "e39": -(($x2 * $x7) + $x15) = 0.0,
            "e40": -(($x2 * $x8) + $x16) = 0.0,
            "e41": -(($x2 * $x9) + $x17) = 0.0,
            "e42": -(($x2 * $x10) + $x18) = 0.0,
            "e43": -(($x3 * $x7) + $x19) = 0.0,
            "e44": -(($x3 * $x8) + $x20) = 0.0,
            "e45": -(($x3 * $x9) + $x21) = 0.0,
            "e46": -(($x3 * $x10) + $x22) = 0.0,
            "e47": -(($x4 * $x11) + $x23) = 0.0,
            "e48": -(($x4 * $x12) + $x24) = 0.0,
            "e49": -(($x4 * $x13) + $x25) = 0.0,
            "e50": -(($x4 * $x14) + $x26) = 0.0,
            "e51": -(($x5 * $x11) + $x27) = 0.0,
            "e52": -(($x5 * $x12) + $x28) = 0.0,
            "e53": -(($x5 * $x13) + $x29) = 0.0,
            "e54": -(($x5 * $x14) + $x30) = 0.0,
            "e55": -(($x6 * $x11) + $x31) = 0.0,
            "e56": -(($x6 * $x12) + $x32) = 0.0,
            "e57": -(($x6 * $x13) + $x33) = 0.0,
            "e58": -(($x6 * $x14) + $x34) = 0.0
        }
    }
};


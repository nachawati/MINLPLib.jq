jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/chakra";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:chakra($input)
{
    let $x1 := $input.x1
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    let $x31 := $input.x31
    let $x32 := $input.x32
    let $x33 := $input.x33
    let $x34 := $input.x34
    let $x35 := $input.x35
    let $x36 := $input.x36
    let $x37 := $input.x37
    let $x38 := $input.x38
    let $x39 := $input.x39
    let $x40 := $input.x40
    let $x41 := $input.x41
    let $x42 := $input.x42
    let $x43 := $input.x43
    let $x44 := $input.x44
    let $x45 := $input.x45
    let $x46 := $input.x46
    let $x47 := $input.x47
    let $x48 := $input.x48
    let $x49 := $input.x49
    let $x50 := $input.x50
    let $x51 := $input.x51
    let $x52 := $input.x52
    let $x53 := $input.x53
    let $x54 := $input.x54
    let $x55 := $input.x55
    let $x56 := $input.x56
    let $x57 := $input.x57
    let $x58 := $input.x58
    let $x59 := $input.x59
    let $x60 := $input.x60
    let $x61 := $input.x61
    let $x62 := $input.x62
    return {
        "obj": -((((((((((((((((((((10.0 * math:pow($x1, 0.1)) + (9.70873786407767 * math:pow($x2, 0.1))) + (9.42595909133755 * math:pow($x3, 0.1))) + (9.1514165935316 * math:pow($x4, 0.1))) + (8.88487047915689 * math:pow($x5, 0.1))) + (8.62608784384164 * math:pow($x6, 0.1))) + (8.37484256683654 * math:pow($x7, 0.1))) + (8.13091511343354 * math:pow($x8, 0.1))) + (7.89409234313936 * math:pow($x9, 0.1))) + (7.66416732343627 * math:pow($x10, 0.1))) + (7.44093914896725 * math:pow($x11, 0.1))) + (7.22421276598762 * math:pow($x12, 0.1))) + (7.01379880192973 * math:pow($x13, 0.1))) + (6.80951339993178 * math:pow($x14, 0.1))) + (6.61117805818619 * math:pow($x15, 0.1))) + (6.41861947396717 * math:pow($x16, 0.1))) + (6.23166939220114 * math:pow($x17, 0.1))) + (6.05016445844771 * math:pow($x18, 0.1))) + (5.87394607616282 * math:pow($x19, 0.1))) + (5.70286026811925 * math:pow($x20, 0.1))),
        "constraints": {
            "e1": ((($x1 - $x21) - (0.95 * $x42)) + $x43) = 0.0,
            "e2": ((($x2 - $x22) - (0.95 * $x43)) + $x44) = 0.0,
            "e3": ((($x3 - $x23) - (0.95 * $x44)) + $x45) = 0.0,
            "e4": ((($x4 - $x24) - (0.95 * $x45)) + $x46) = 0.0,
            "e5": ((($x5 - $x25) - (0.95 * $x46)) + $x47) = 0.0,
            "e6": ((($x6 - $x26) - (0.95 * $x47)) + $x48) = 0.0,
            "e7": ((($x7 - $x27) - (0.95 * $x48)) + $x49) = 0.0,
            "e8": ((($x8 - $x28) - (0.95 * $x49)) + $x50) = 0.0,
            "e9": ((($x9 - $x29) - (0.95 * $x50)) + $x51) = 0.0,
            "e10": ((($x10 - $x30) - (0.95 * $x51)) + $x52) = 0.0,
            "e11": ((($x11 - $x31) - (0.95 * $x52)) + $x53) = 0.0,
            "e12": ((($x12 - $x32) - (0.95 * $x53)) + $x54) = 0.0,
            "e13": ((($x13 - $x33) - (0.95 * $x54)) + $x55) = 0.0,
            "e14": ((($x14 - $x34) - (0.95 * $x55)) + $x56) = 0.0,
            "e15": ((($x15 - $x35) - (0.95 * $x56)) + $x57) = 0.0,
            "e16": ((($x16 - $x36) - (0.95 * $x57)) + $x58) = 0.0,
            "e17": ((($x17 - $x37) - (0.95 * $x58)) + $x59) = 0.0,
            "e18": ((($x18 - $x38) - (0.95 * $x59)) + $x60) = 0.0,
            "e19": ((($x19 - $x39) - (0.95 * $x60)) + $x61) = 0.0,
            "e20": ((($x20 - $x40) - (0.95 * $x61)) + $x62) = 0.0,
            "e21": -((0.560877056310648 * math:pow($x42, 0.75)) + $x21) = 0.0,
            "e22": -((0.569991308475696 * math:pow($x43, 0.75)) + $x22) = 0.0,
            "e23": -((0.579253667238426 * math:pow($x44, 0.75)) + $x23) = 0.0,
            "e24": -((0.58866653933105 * math:pow($x45, 0.75)) + $x24) = 0.0,
            "e25": -((0.59823237059518 * math:pow($x46, 0.75)) + $x25) = 0.0,
            "e26": -((0.607953646617352 * math:pow($x47, 0.75)) + $x26) = 0.0,
            "e27": -((0.617832893374884 * math:pow($x48, 0.75)) + $x27) = 0.0,
            "e28": -((0.627872677892226 * math:pow($x49, 0.75)) + $x28) = 0.0,
            "e29": -((0.638075608907974 * math:pow($x50, 0.75)) + $x29) = 0.0,
            "e30": -((0.648444337552729 * math:pow($x51, 0.75)) + $x30) = 0.0,
            "e31": -((0.658981558037961 * math:pow($x52, 0.75)) + $x31) = 0.0,
            "e32": -((0.669690008356078 * math:pow($x53, 0.75)) + $x32) = 0.0,
            "e33": -((0.680572470991864 * math:pow($x54, 0.75)) + $x33) = 0.0,
            "e34": -((0.691631773645482 * math:pow($x55, 0.75)) + $x34) = 0.0,
            "e35": -((0.702870789967221 * math:pow($x56, 0.75)) + $x35) = 0.0,
            "e36": -((0.714292440304189 * math:pow($x57, 0.75)) + $x36) = 0.0,
            "e37": -((0.725899692459132 * math:pow($x58, 0.75)) + $x37) = 0.0,
            "e38": -((0.737695562461593 * math:pow($x59, 0.75)) + $x38) = 0.0,
            "e39": -((0.749683115351594 * math:pow($x60, 0.75)) + $x39) = 0.0,
            "e40": -((0.761865465976057 * math:pow($x61, 0.75)) + $x40) = 0.0,
            "e41": -((0.774245779798168 * math:pow($x62, 0.75)) + $x41) = 0.0
        }
    }
};


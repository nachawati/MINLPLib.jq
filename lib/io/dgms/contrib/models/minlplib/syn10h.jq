jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/syn10h";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:syn10h($input)
{
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    let $x31 := $input.x31
    let $x32 := $input.x32
    let $x33 := $input.x33
    let $x34 := $input.x34
    let $x35 := $input.x35
    let $x36 := $input.x36
    let $x37 := $input.x37
    let $x38 := $input.x38
    let $x39 := $input.x39
    let $x40 := $input.x40
    let $x41 := $input.x41
    let $x42 := $input.x42
    let $x43 := $input.x43
    let $x44 := $input.x44
    let $x45 := $input.x45
    let $x46 := $input.x46
    let $x47 := $input.x47
    let $x48 := $input.x48
    let $x49 := $input.x49
    let $x50 := $input.x50
    let $x51 := $input.x51
    let $x52 := $input.x52
    let $x53 := $input.x53
    let $x54 := $input.x54
    let $x55 := $input.x55
    let $x56 := $input.x56
    let $x57 := $input.x57
    let $x58 := $input.x58
    let $x59 := $input.x59
    let $x60 := $input.x60
    let $x61 := $input.x61
    let $x62 := $input.x62
    let $x63 := $input.x63
    let $x64 := $input.x64
    let $x65 := $input.x65
    let $x66 := $input.x66
    let $x67 := $input.x67
    let $x68 := $input.x68
    let $b69 := $input.b69
    let $b70 := $input.b70
    let $b71 := $input.b71
    let $b72 := $input.b72
    let $b73 := $input.b73
    let $b74 := $input.b74
    let $b75 := $input.b75
    let $b76 := $input.b76
    let $b77 := $input.b77
    let $b78 := $input.b78
    return {
        "obj": ((((((((((((((((((5.0 * $x8) - (2.0 * $x13)) + (200.0 * $x21)) + (250.0 * $x22)) + (200.0 * $x23)) + (200.0 * $x24)) + (500.0 * $x25)) + (350.0 * $x26)) - (5.0 * $b69)) - (8.0 * $b70)) - (6.0 * $b71)) - (10.0 * $b72)) - (6.0 * $b73)) - (7.0 * $b74)) - (4.0 * $b75)) - (5.0 * $b76)) - (2.0 * $b77)) - (4.0 * $b78)),
        "constraints": {
            "e2": (($x2 - $x3) - $x4) = 0.0,
            "e3": -(($x5 - $x6) + $x7) = 0.0,
            "e4": (($x7 - $x8) - $x9) = 0.0,
            "e5": ((($x9 - $x10) - $x11) - $x12) = 0.0,
            "e6": (($x14 - $x17) - $x18) = 0.0,
            "e7": ((($x16 - $x19) - $x20) - $x21) = 0.0,
            "e8": ((($x31 idiv (1.0E-6 + $b69)) - math:log((1.0 + ($x27 idiv (1.0E-6 + $b69))))) * (1.0E-6 + $b69)) <= 0.0,
            "e9": $x28 = 0.0,
            "e10": $x32 = 0.0,
            "e11": (($x3 - $x27) - $x28) = 0.0,
            "e12": (($x5 - $x31) - $x32) = 0.0,
            "e13": ($x27 - (10.0 * $b69)) <= 0.0,
            "e14": ($x28 + (10.0 * $b69)) <= 10.0,
            "e15": ($x31 - (2.39789527279837 * $b69)) <= 0.0,
            "e16": ($x32 + (2.39789527279837 * $b69)) <= 2.39789527279837,
            "e17": ((($x33 idiv (1.0E-6 + $b70)) - (1.2 * math:log((1.0 + ($x29 idiv (1.0E-6 + $b70)))))) * (1.0E-6 + $b70)) <= 0.0,
            "e18": $x30 = 0.0,
            "e19": $x34 = 0.0,
            "e20": (($x4 - $x29) - $x30) = 0.0,
            "e21": (($x6 - $x33) - $x34) = 0.0,
            "e22": ($x29 - (10.0 * $b70)) <= 0.0,
            "e23": ($x30 + (10.0 * $b70)) <= 10.0,
            "e24": ($x33 - (2.87747432735804 * $b70)) <= 0.0,
            "e25": ($x34 + (2.87747432735804 * $b70)) <= 2.87747432735804,
            "e26": -((0.75 * $x35) + $x43) = 0.0,
            "e27": $x36 = 0.0,
            "e28": $x44 = 0.0,
            "e29": (($x10 - $x35) - $x36) = 0.0,
            "e30": (($x14 - $x43) - $x44) = 0.0,
            "e31": ($x35 - (2.87747432735804 * $b71)) <= 0.0,
            "e32": ($x36 + (2.87747432735804 * $b71)) <= 2.87747432735804,
            "e33": ($x43 - (2.15810574551853 * $b71)) <= 0.0,
            "e34": ($x44 + (2.15810574551853 * $b71)) <= 2.15810574551853,
            "e35": ((($x45 idiv (1.0E-6 + $b72)) - (1.5 * math:log((1.0 + ($x37 idiv (1.0E-6 + $b72)))))) * (1.0E-6 + $b72)) <= 0.0,
            "e36": $x38 = 0.0,
            "e37": $x47 = 0.0,
            "e38": (($x11 - $x37) - $x38) = 0.0,
            "e39": (($x15 - $x45) - $x47) = 0.0,
            "e40": ($x37 - (2.87747432735804 * $b72)) <= 0.0,
            "e41": ($x38 + (2.87747432735804 * $b72)) <= 2.87747432735804,
            "e42": ($x45 - (2.03277599268042 * $b72)) <= 0.0,
            "e43": ($x47 + (2.03277599268042 * $b72)) <= 2.03277599268042,
            "e44": -($x39 + $x49) = 0.0,
            "e45": -((0.5 * $x41) + $x49) = 0.0,
            "e46": $x40 = 0.0,
            "e47": $x42 = 0.0,
            "e48": $x50 = 0.0,
            "e49": (($x12 - $x39) - $x40) = 0.0,
            "e50": (($x13 - $x41) - $x42) = 0.0,
            "e51": (($x16 - $x49) - $x50) = 0.0,
            "e52": ($x39 - (2.87747432735804 * $b73)) <= 0.0,
            "e53": ($x40 + (2.87747432735804 * $b73)) <= 2.87747432735804,
            "e54": ($x41 - (7.0 * $b73)) <= 0.0,
            "e55": ($x42 + (7.0 * $b73)) <= 7.0,
            "e56": ($x49 - (3.5 * $b73)) <= 0.0,
            "e57": ($x50 + (3.5 * $b73)) <= 3.5,
            "e58": ((($x59 idiv (1.0E-6 + $b74)) - (1.25 * math:log((1.0 + ($x51 idiv (1.0E-6 + $b74)))))) * (1.0E-6 + $b74)) <= 0.0,
            "e59": $x52 = 0.0,
            "e60": $x60 = 0.0,
            "e61": (($x17 - $x51) - $x52) = 0.0,
            "e62": (($x22 - $x59) - $x60) = 0.0,
            "e63": ($x51 - (2.15810574551853 * $b74)) <= 0.0,
            "e64": ($x52 + (2.15810574551853 * $b74)) <= 2.15810574551853,
            "e65": ($x59 - (1.43746550029693 * $b74)) <= 0.0,
            "e66": ($x60 + (1.43746550029693 * $b74)) <= 1.43746550029693,
            "e67": ((($x61 idiv (1.0E-6 + $b75)) - (0.9 * math:log((1.0 + ($x53 idiv (1.0E-6 + $b75)))))) * (1.0E-6 + $b75)) <= 0.0,
            "e68": $x54 = 0.0,
            "e69": $x62 = 0.0,
            "e70": (($x18 - $x53) - $x54) = 0.0,
            "e71": (($x23 - $x61) - $x62) = 0.0,
            "e72": ($x53 - (2.15810574551853 * $b75)) <= 0.0,
            "e73": ($x54 + (2.15810574551853 * $b75)) <= 2.15810574551853,
            "e74": ($x61 - (1.03497516021379 * $b75)) <= 0.0,
            "e75": ($x62 + (1.03497516021379 * $b75)) <= 1.03497516021379,
            "e76": ((($x63 idiv (1.0E-6 + $b76)) - math:log((1.0 + ($x46 idiv (1.0E-6 + $b76))))) * (1.0E-6 + $b76)) <= 0.0,
            "e77": $x48 = 0.0,
            "e78": $x64 = 0.0,
            "e79": (($x15 - $x46) - $x48) = 0.0,
            "e80": (($x24 - $x63) - $x64) = 0.0,
            "e81": ($x46 - (2.03277599268042 * $b76)) <= 0.0,
            "e82": ($x48 + (2.03277599268042 * $b76)) <= 2.03277599268042,
            "e83": ($x63 - (1.10947836929589 * $b76)) <= 0.0,
            "e84": ($x64 + (1.10947836929589 * $b76)) <= 1.10947836929589,
            "e85": -((0.9 * $x55) + $x65) = 0.0,
            "e86": $x56 = 0.0,
            "e87": $x66 = 0.0,
            "e88": (($x19 - $x55) - $x56) = 0.0,
            "e89": (($x25 - $x65) - $x66) = 0.0,
            "e90": ($x55 - (3.5 * $b77)) <= 0.0,
            "e91": ($x56 + (3.5 * $b77)) <= 3.5,
            "e92": ($x65 - (3.15 * $b77)) <= 0.0,
            "e93": ($x66 + (3.15 * $b77)) <= 3.15,
            "e94": -((0.6 * $x57) + $x67) = 0.0,
            "e95": $x58 = 0.0,
            "e96": $x68 = 0.0,
            "e97": (($x20 - $x57) - $x58) = 0.0,
            "e98": (($x26 - $x67) - $x68) = 0.0,
            "e99": ($x57 - (3.5 * $b78)) <= 0.0,
            "e100": ($x58 + (3.5 * $b78)) <= 3.5,
            "e101": ($x67 - (2.1 * $b78)) <= 0.0,
            "e102": ($x68 + (2.1 * $b78)) <= 2.1,
            "e103": ($b69 + $b70) = 1.0,
            "e104": -(($b71 + $b74) + $b75) >= 0.0,
            "e105": -($b72 + $b76) >= 0.0,
            "e106": (($b69 + $b70) - $b71) >= 0.0,
            "e107": (($b69 + $b70) - $b72) >= 0.0,
            "e108": (($b69 + $b70) - $b73) >= 0.0,
            "e109": ($b71 - $b74) >= 0.0,
            "e110": ($b71 - $b75) >= 0.0,
            "e111": ($b72 - $b76) >= 0.0,
            "e112": ($b73 - $b77) >= 0.0,
            "e113": ($b73 - $b78) >= 0.0
        }
    }
};


jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/wastepaper5";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:wastepaper5($input)
{
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    let $x31 := $input.x31
    let $x32 := $input.x32
    let $x33 := $input.x33
    let $x34 := $input.x34
    let $x35 := $input.x35
    let $x36 := $input.x36
    let $x37 := $input.x37
    let $x38 := $input.x38
    let $x39 := $input.x39
    let $x40 := $input.x40
    let $b41 := $input.b41
    let $b42 := $input.b42
    let $b43 := $input.b43
    let $b44 := $input.b44
    let $b45 := $input.b45
    let $b46 := $input.b46
    let $b47 := $input.b47
    let $b48 := $input.b48
    let $b49 := $input.b49
    let $b50 := $input.b50
    let $b51 := $input.b51
    let $b52 := $input.b52
    let $b53 := $input.b53
    let $b54 := $input.b54
    let $b55 := $input.b55
    let $b56 := $input.b56
    let $b57 := $input.b57
    let $b58 := $input.b58
    let $b59 := $input.b59
    let $b60 := $input.b60
    let $b61 := $input.b61
    let $b62 := $input.b62
    let $b63 := $input.b63
    let $b64 := $input.b64
    let $b65 := $input.b65
    let $b66 := $input.b66
    let $b67 := $input.b67
    let $b68 := $input.b68
    let $b69 := $input.b69
    let $b70 := $input.b70
    let $b71 := $input.b71
    let $b72 := $input.b72
    let $b73 := $input.b73
    let $b74 := $input.b74
    let $b75 := $input.b75
    let $b76 := $input.b76
    let $b77 := $input.b77
    let $b78 := $input.b78
    let $b79 := $input.b79
    let $b80 := $input.b80
    let $b81 := $input.b81
    let $b82 := $input.b82
    let $b83 := $input.b83
    let $b84 := $input.b84
    let $b85 := $input.b85
    let $b86 := $input.b86
    let $b87 := $input.b87
    let $b88 := $input.b88
    let $b89 := $input.b89
    let $b90 := $input.b90
    let $b91 := $input.b91
    let $b92 := $input.b92
    let $b93 := $input.b93
    let $b94 := $input.b94
    let $b95 := $input.b95
    let $b96 := $input.b96
    let $b97 := $input.b97
    let $b98 := $input.b98
    let $b99 := $input.b99
    let $b100 := $input.b100
    let $b101 := $input.b101
    let $b102 := $input.b102
    let $b103 := $input.b103
    let $b104 := $input.b104
    let $b105 := $input.b105
    return {
        "obj": $x25,
        "constraints": {
            "e2": $x7 <= 0.0675,
            "e3": (($x9 - $x10) + $x11) = 0.0,
            "e4": (($x12 - $x13) + $x14) = 0.0,
            "e5": (($x15 - $x16) + $x17) = 0.0,
            "e6": (($x18 - $x19) + $x20) = 0.0,
            "e7": (($x21 - $x22) + $x23) = 0.0,
            "e8": (($x26 - $x27) + $x28) = 0.0,
            "e9": (($x29 - $x30) + $x31) = 0.0,
            "e10": (($x32 - $x33) + $x34) = 0.0,
            "e11": (($x35 - $x36) + $x37) = 0.0,
            "e12": (($x38 - $x39) + $x40) = 0.0,
            "e13": ((math:pow($x2, 0.29) * $x10) - $x11) = 0.0,
            "e14": ((math:pow($x3, 0.13) * $x13) - $x14) = 0.0,
            "e15": ((math:pow($x4, 0.06) * $x16) - $x17) = 0.0,
            "e16": ((math:pow($x5, 0.15) * $x19) - $x20) = 0.0,
            "e17": ((math:pow($x6, 0.2) * $x22) - $x23) = 0.0,
            "e18": ((math:pow($x2, 0.74) * $x27) - $x28) = 0.0,
            "e19": ((math:pow($x3, 0.79) * $x30) - $x31) = 0.0,
            "e20": ((math:pow($x4, 0.71) * $x33) - $x34) = 0.0,
            "e21": ((math:pow($x5, 0.8) * $x36) - $x37) = 0.0,
            "e22": ((math:pow($x6, 0.7) * $x39) - $x40) = 0.0,
            "e23": (((((((((((($b41 * $x9) + ($b46 * $x11)) + ($b51 * $x12)) + ($b56 * $x14)) + ($b61 * $x15)) + ($b66 * $x17)) + ($b71 * $x18)) + ($b76 * $x20)) + ($b81 * $x21)) + ($b86 * $x23)) - $x10) + (0.675 * $b91)) = 0.0,
            "e24": (((((((((((($b42 * $x9) + ($b47 * $x11)) + ($b52 * $x12)) + ($b57 * $x14)) + ($b62 * $x15)) + ($b67 * $x17)) + ($b72 * $x18)) + ($b77 * $x20)) + ($b82 * $x21)) + ($b87 * $x23)) - $x13) + (0.675 * $b92)) = 0.0,
            "e25": (((((((((((($b43 * $x9) + ($b48 * $x11)) + ($b53 * $x12)) + ($b58 * $x14)) + ($b63 * $x15)) + ($b68 * $x17)) + ($b73 * $x18)) + ($b78 * $x20)) + ($b83 * $x21)) + ($b88 * $x23)) - $x16) + (0.675 * $b93)) = 0.0,
            "e26": (((((((((((($b44 * $x9) + ($b49 * $x11)) + ($b54 * $x12)) + ($b59 * $x14)) + ($b64 * $x15)) + ($b69 * $x17)) + ($b74 * $x18)) + ($b79 * $x20)) + ($b84 * $x21)) + ($b89 * $x23)) - $x19) + (0.675 * $b94)) = 0.0,
            "e27": (((((((((((($b45 * $x9) + ($b50 * $x11)) + ($b55 * $x12)) + ($b60 * $x14)) + ($b65 * $x15)) + ($b70 * $x17)) + ($b75 * $x18)) + ($b80 * $x20)) + ($b85 * $x21)) + ($b90 * $x23)) - $x22) + (0.675 * $b95)) = 0.0,
            "e28": (((((((((((($b41 * $x26) + ($b46 * $x28)) + ($b51 * $x29)) + ($b56 * $x31)) + ($b61 * $x32)) + ($b66 * $x34)) + ($b71 * $x35)) + ($b76 * $x37)) + ($b81 * $x38)) + ($b86 * $x40)) - $x27) + (0.649 * $b91)) = 0.0,
            "e29": (((((((((((($b42 * $x26) + ($b47 * $x28)) + ($b52 * $x29)) + ($b57 * $x31)) + ($b62 * $x32)) + ($b67 * $x34)) + ($b72 * $x35)) + ($b77 * $x37)) + ($b82 * $x38)) + ($b87 * $x40)) - $x30) + (0.649 * $b92)) = 0.0,
            "e30": (((((((((((($b43 * $x26) + ($b48 * $x28)) + ($b53 * $x29)) + ($b58 * $x31)) + ($b63 * $x32)) + ($b68 * $x34)) + ($b73 * $x35)) + ($b78 * $x37)) + ($b83 * $x38)) + ($b88 * $x40)) - $x33) + (0.649 * $b93)) = 0.0,
            "e31": (((((((((((($b44 * $x26) + ($b49 * $x28)) + ($b54 * $x29)) + ($b59 * $x31)) + ($b64 * $x32)) + ($b69 * $x34)) + ($b74 * $x35)) + ($b79 * $x37)) + ($b84 * $x38)) + ($b89 * $x40)) - $x36) + (0.649 * $b94)) = 0.0,
            "e32": (((((((((((($b45 * $x26) + ($b50 * $x28)) + ($b55 * $x29)) + ($b60 * $x31)) + ($b65 * $x32)) + ($b70 * $x34)) + ($b75 * $x35)) + ($b80 * $x37)) + ($b85 * $x38)) + ($b90 * $x40)) - $x39) + (0.649 * $b95)) = 0.0,
            "e33": (((((($b96 * $x9) + ($b97 * $x12)) + ($b98 * $x15)) + ($b99 * $x18)) + ($b100 * $x21)) - $x7) = 0.0,
            "e34": (((((($b96 * $x26) + ($b97 * $x29)) + ($b98 * $x32)) + ($b99 * $x35)) + ($b100 * $x38)) - $x24) = 0.0,
            "e35": (((((($b101 * $x11) + ($b102 * $x14)) + ($b103 * $x17)) + ($b104 * $x20)) + ($b105 * $x23)) - $x8) = 0.0,
            "e36": (((((($b101 * $x28) + ($b102 * $x31)) + ($b103 * $x34)) + ($b104 * $x37)) + ($b105 * $x40)) - $x25) = 0.0,
            "e37": ((((($b41 + $b42) + $b43) + $b44) + $b45) + $b96) = 1.0,
            "e38": ((((($b51 + $b52) + $b53) + $b54) + $b55) + $b97) = 1.0,
            "e39": ((((($b61 + $b62) + $b63) + $b64) + $b65) + $b98) = 1.0,
            "e40": ((((($b71 + $b72) + $b73) + $b74) + $b75) + $b99) = 1.0,
            "e41": ((((($b81 + $b82) + $b83) + $b84) + $b85) + $b100) = 1.0,
            "e42": ((((($b46 + $b47) + $b48) + $b49) + $b50) + $b101) = 1.0,
            "e43": ((((($b56 + $b57) + $b58) + $b59) + $b60) + $b102) = 1.0,
            "e44": ((((($b66 + $b67) + $b68) + $b69) + $b70) + $b103) = 1.0,
            "e45": ((((($b76 + $b77) + $b78) + $b79) + $b80) + $b104) = 1.0,
            "e46": ((((($b86 + $b87) + $b88) + $b89) + $b90) + $b105) = 1.0,
            "e47": (((($b91 + $b92) + $b93) + $b94) + $b95) = 1.0
        }
    }
};


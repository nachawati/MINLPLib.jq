jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/demo7";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:demo7($input)
{
    let $x1 := $input.x1
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    let $x31 := $input.x31
    let $x32 := $input.x32
    let $x33 := $input.x33
    let $x34 := $input.x34
    let $x35 := $input.x35
    let $x36 := $input.x36
    let $x37 := $input.x37
    let $x38 := $input.x38
    let $x39 := $input.x39
    let $x40 := $input.x40
    let $x41 := $input.x41
    let $x42 := $input.x42
    let $x43 := $input.x43
    let $x44 := $input.x44
    let $x45 := $input.x45
    let $x46 := $input.x46
    let $x47 := $input.x47
    let $x48 := $input.x48
    let $x49 := $input.x49
    let $x50 := $input.x50
    let $x51 := $input.x51
    let $x52 := $input.x52
    let $x53 := $input.x53
    let $x54 := $input.x54
    let $x55 := $input.x55
    let $x56 := $input.x56
    let $x57 := $input.x57
    let $x58 := $input.x58
    let $x59 := $input.x59
    let $x60 := $input.x60
    let $x61 := $input.x61
    let $x62 := $input.x62
    let $x63 := $input.x63
    let $x64 := $input.x64
    let $x65 := $input.x65
    let $x66 := $input.x66
    let $x67 := $input.x67
    let $x69 := $input.x69
    let $x70 := $input.x70
    let $x71 := $input.x71
    return {
        "obj": -(((((((((((((((((((225.0 * $x50) - (0.0231481481481481 * math:pow($x50, 2.0))) - (0.277777777777778 * math:pow($x51, 2.0))) + (700.0 * $x51)) - (0.0892857142857143 * math:pow($x52, 2.0))) + (250.0 * $x52)) - (0.0833333333333333 * math:pow($x53, 2.0))) + (700.0 * $x53)) - (0.0184210526315789 * math:pow($x54, 2.0))) + (210.0 * $x54)) - (0.1 * math:pow($x55, 2.0))) + (220.0 * $x55)) + $x14) - (40.0 * $x62)) - (300.0 * $x63)) - (60.0 * $x64)) + (140.0 * $x65)) + (270.0 * $x66)) + (85.0 * $x67)),
        "constraints": {
            "e1": ((($x1 + $x2) + $x3) + $x4) <= 4000.0,
            "e2": ((($x1 + $x2) + $x3) + $x4) <= 4000.0,
            "e3": (((($x1 + (0.5 * $x2)) + $x3) + $x4) + (0.5 * $x5)) <= 4000.0,
            "e4": ((($x1 + $x3) + $x4) + $x5) <= 4000.0,
            "e5": ((($x1 + (0.25 * $x4)) + $x5) + (0.25 * $x6)) <= 4000.0,
            "e6": ($x5 + $x6) <= 4000.0,
            "e7": (($x5 + $x6) + (0.75 * $x7)) <= 4000.0,
            "e8": (($x5 + $x6) + $x7) <= 4000.0,
            "e9": (($x5 + $x6) + $x7) <= 4000.0,
            "e10": (($x5 + (0.5 * $x6)) + $x7) <= 4000.0,
            "e11": ((((((0.5 * $x1) + (0.25 * $x2)) + (0.25 * $x3)) + (0.5 * $x4)) + (0.75 * $x5)) + (0.75 * $x7)) <= 4000.0,
            "e12": ((($x1 + $x2) + $x3) + $x4) <= 4000.0,
            "e13": ((((((((1.72 * $x1) + (4.5 * $x2)) + (0.75 * $x3)) + (5.16 * $x4)) - $x15) - $x27) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e14": ((((((((0.5 * $x1) + $x2) + (0.75 * $x3)) + (5.0 * $x4)) - $x16) - $x28) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e15": (((((((($x1 + (8.0 * $x2)) + (0.75 * $x3)) + (5.0 * $x4)) + (5.0 * $x5)) - $x17) - $x29) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e16": ((((((($x1 + (16.0 * $x3)) + (19.58 * $x4)) + (5.0 * $x5)) - $x18) - $x30) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e17": ((((((((17.16 * $x1) + (2.42 * $x4)) + (9.0 * $x5)) + (4.3 * $x6)) - $x19) - $x31) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e18": (((((((2.34 * $x1) + (2.0 * $x5)) + (5.04 * $x6)) - $x20) - $x32) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e19": (((((((1.5 * $x5) + (7.16 * $x6)) + (17.0 * $x7)) - $x21) - $x33) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e20": (((((((2.0 * $x5) + (7.97 * $x6)) + (15.0 * $x7)) - $x22) - $x34) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e21": (((((($x5 + (4.41 * $x6)) + (12.0 * $x7)) - $x23) - $x35) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e22": (((((((26.0 * $x5) + (1.12 * $x6)) + (7.0 * $x7)) - $x24) - $x36) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e23": ((((((((((2.43 * $x1) + (2.5 * $x2)) + (7.5 * $x3)) + (11.16 * $x4)) + (12.0 * $x5)) + (6.0 * $x7)) - $x25) - $x37) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e24": ((((((((1.35 * $x1) + (7.5 * $x2)) + (0.75 * $x3)) + (4.68 * $x4)) - $x26) - $x38) + (2.0 * $x39)) + (2.0 * $x40)) <= 0.0,
            "e25": ((((($x5 + $x6) + $x7) - (2.0 * $x39)) - (2.0 * $x40)) - $x48) <= 0.0,
            "e26": (((((($x1 + $x2) + $x3) + $x4) - (2.0 * $x39)) - (2.0 * $x40)) - $x49) <= 0.0,
            "e27": (((((((((((($x13 - (3.0 * $x15)) - (3.0 * $x16)) - (3.0 * $x17)) - (3.0 * $x18)) - (3.0 * $x19)) - (3.0 * $x20)) - (3.0 * $x21)) - (3.0 * $x22)) - (3.0 * $x23)) - (3.0 * $x24)) - (3.0 * $x25)) - (3.0 * $x26)) = 0.0,
            "e28": -((((((((((((((((225.0 * $x50) - (0.0462962962962963 * math:pow($x50, 2.0))) - (0.555555555555555 * math:pow($x51, 2.0))) + (700.0 * $x51)) - (0.178571428571429 * math:pow($x52, 2.0))) + (250.0 * $x52)) - (0.166666666666667 * math:pow($x53, 2.0))) + (700.0 * $x53)) - (0.0368421052631579 * math:pow($x54, 2.0))) + (210.0 * $x54)) - (0.2 * math:pow($x55, 2.0))) + (220.0 * $x55)) + $x9) - (40.0 * $x62)) - (300.0 * $x63)) - (60.0 * $x64)) = 0.0,
            "e29": (((((((((((($x12 - (4.0 * $x27)) - (4.0 * $x28)) - (4.0 * $x29)) - (4.0 * $x30)) - (4.0 * $x31)) - (4.0 * $x32)) - (4.0 * $x33)) - (4.0 * $x34)) - (4.0 * $x35)) - (4.0 * $x36)) - (4.0 * $x37)) - (4.0 * $x38)) = 0.0,
            "e30": -(((($x10 - $x11) - $x12) - $x13) + $x14) = 0.0,
            "e31": -(($x41 + $x50) - $x65) = 0.0,
            "e32": -(($x43 + $x51) - $x66) = 0.0,
            "e33": -(($x44 + $x52) + $x62) = 0.0,
            "e34": -(($x45 + $x53) + $x63) = 0.0,
            "e35": -(($x46 + $x54) - $x67) = 0.0,
            "e36": -(($x47 + $x55) + $x64) = 0.0,
            "e37": -((((((((((0.0916666666666667 * $x1) - (0.0783333333333333 * $x2)) - (0.0883333333333333 * $x3)) - (0.176666666666667 * $x4)) - (0.211666666666667 * $x5)) - (0.1 * $x6)) - (0.19 * $x7)) - (0.00666666666666667 * $x39)) - (0.00666666666666667 * $x40)) + $x70) = 0.0,
            "e38": -((1.5 * $x1) + $x41) = 0.0,
            "e39": -((6.0 * $x2) + $x42) = 0.0,
            "e40": -($x3 + $x43) = 0.0,
            "e41": -((3.0 * $x4) + $x44) = 0.0,
            "e42": -((1.5 * $x5) + $x45) = 0.0,
            "e43": -((2.0 * $x6) + $x46) = 0.0,
            "e44": -((3.0 * $x7) + $x47) = 0.0,
            "e45": -(((((((100.0 * $x41) - (200.0 * $x43)) - (125.0 * $x44)) - (350.0 * $x45)) - (70.0 * $x46)) - (120.0 * $x47)) + $x69) = 0.0,
            "e46": -(((((((10.0 * $x1) - (5.0 * $x3)) - (50.0 * $x4)) - (80.0 * $x5)) - (5.0 * $x6)) - (50.0 * $x7)) + $x10) = 0.0,
            "e47": (($x11 - (40.0 * $x48)) - (40.0 * $x49)) = 0.0,
            "e48": (((6.0 * $x2) - (1.3 * $x39)) - (2.0 * $x40)) >= 0.0,
            "e49": (((1.75 * $x1) - (1.6 * $x39)) - (0.8 * $x40)) >= 0.0,
            "e50": -((($x8 - $x9) - $x13) + $x14) = 0.0,
            "e51": -(((((((40.0 * $x62) - (300.0 * $x63)) - (60.0 * $x64)) + (140.0 * $x65)) + (270.0 * $x66)) + (85.0 * $x67)) + $x71) = 0.0,
            "e52": ((0.0462962962962963 * $x50) + $x56) = 225.0,
            "e53": ((0.555555555555555 * $x51) + $x57) = 700.0,
            "e54": ((0.178571428571429 * $x52) + $x58) = 250.0,
            "e55": ((0.166666666666667 * $x53) + $x59) = 700.0,
            "e56": ((0.0368421052631579 * $x54) + $x60) = 210.0,
            "e57": ((0.2 * $x55) + $x61) = 220.0
        }
    }
};


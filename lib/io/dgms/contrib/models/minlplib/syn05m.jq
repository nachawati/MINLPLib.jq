jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/syn05m";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:syn05m($input)
{
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $b17 := $input.b17
    let $b18 := $input.b18
    let $b19 := $input.b19
    let $b20 := $input.b20
    let $b21 := $input.b21
    return {
        "obj": ((((((((((5.0 * $x8) - (2.0 * $x13)) + (200.0 * $x14)) + (250.0 * $x15)) + (300.0 * $x16)) - (5.0 * $b17)) - (8.0 * $b18)) - (6.0 * $b19)) - (10.0 * $b20)) - (6.0 * $b21)),
        "constraints": {
            "e2": (($x2 - $x3) - $x4) = 0.0,
            "e3": -(($x5 - $x6) + $x7) = 0.0,
            "e4": (($x7 - $x8) - $x9) = 0.0,
            "e5": ((($x9 - $x10) - $x11) - $x12) = 0.0,
            "e6": -((math:log((1.0 + $x3)) + $x5) + $b17) <= 1.0,
            "e7": ($x3 - (10.0 * $b17)) <= 0.0,
            "e8": ($x5 - (2.39789527279837 * $b17)) <= 0.0,
            "e9": -(((1.2 * math:log((1.0 + $x4))) + $x6) + $b18) <= 1.0,
            "e10": ($x4 - (10.0 * $b18)) <= 0.0,
            "e11": ($x6 - (2.87747432735804 * $b18)) <= 0.0,
            "e12": -(((0.75 * $x10) + $x14) + $b19) <= 1.0,
            "e13": -(((0.75 * $x10) + $x14) - $b19) >= -1.0,
            "e14": ($x10 - (2.87747432735804 * $b19)) <= 0.0,
            "e15": ($x14 - (2.15810574551853 * $b19)) <= 0.0,
            "e16": -(((1.5 * math:log((1.0 + $x11))) + $x15) + $b20) <= 1.0,
            "e17": ($x11 - (2.87747432735804 * $b20)) <= 0.0,
            "e18": ($x15 - (2.03277599268042 * $b20)) <= 0.0,
            "e19": -(($x12 + $x16) + $b21) <= 1.0,
            "e20": -(($x12 + $x16) - $b21) >= -1.0,
            "e21": -(((0.5 * $x13) + $x16) + $b21) <= 1.0,
            "e22": -(((0.5 * $x13) + $x16) - $b21) >= -1.0,
            "e23": ($x12 - (2.87747432735804 * $b21)) <= 0.0,
            "e24": ($x13 - (7.0 * $b21)) <= 0.0,
            "e25": ($x16 - (3.5 * $b21)) <= 0.0,
            "e26": ($b17 + $b18) = 1.0,
            "e27": (($b17 + $b18) - $b19) >= 0.0,
            "e28": (($b17 + $b18) - $b20) >= 0.0,
            "e29": (($b17 + $b18) - $b21) >= 0.0
        }
    }
};


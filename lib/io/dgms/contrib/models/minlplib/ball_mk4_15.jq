jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/ball_mk4_15";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:ball_mk4_15($input)
{
    let $i2 := $input.i2
    let $i3 := $input.i3
    let $i4 := $input.i4
    let $i5 := $input.i5
    let $i6 := $input.i6
    let $i7 := $input.i7
    let $i8 := $input.i8
    let $i9 := $input.i9
    let $i10 := $input.i10
    let $i11 := $input.i11
    let $i12 := $input.i12
    let $i13 := $input.i13
    let $i14 := $input.i14
    let $i15 := $input.i15
    let $i16 := $input.i16
    let $i17 := $input.i17
    let $i18 := $input.i18
    let $i19 := $input.i19
    let $i20 := $input.i20
    let $i21 := $input.i21
    let $i22 := $input.i22
    let $i23 := $input.i23
    let $i24 := $input.i24
    let $i25 := $input.i25
    let $i26 := $input.i26
    let $i27 := $input.i27
    let $i28 := $input.i28
    let $i29 := $input.i29
    let $i30 := $input.i30
    let $i31 := $input.i31
    return {
        "obj": ((((((((((((((((((((((((((((((29.0 * $i2) + (28.0 * $i3)) + (27.0 * $i4)) + (26.0 * $i5)) + (25.0 * $i6)) + (24.0 * $i7)) + (23.0 * $i8)) + (22.0 * $i9)) + (21.0 * $i10)) + (20.0 * $i11)) + (19.0 * $i12)) + (18.0 * $i13)) + (17.0 * $i14)) + (16.0 * $i15)) + (15.0 * $i16)) + (14.0 * $i17)) + (13.0 * $i18)) + (12.0 * $i19)) + (11.0 * $i20)) + (10.0 * $i21)) + (9.0 * $i22)) + (8.0 * $i23)) + (7.0 * $i24)) + (6.0 * $i25)) + (5.0 * $i26)) + (4.0 * $i27)) + (3.0 * $i28)) + (2.0 * $i29)) + $i30) + (30.0 * $i31)),
        "constraints": {
            "e2": ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((100.0 * math:pow($i30, 2.0)) - (98.0 * $i30)) + (100.0 * math:pow($i29, 2.0))) - (98.0 * $i29)) + (100.0 * math:pow($i28, 2.0))) - (98.0 * $i28)) + (100.0 * math:pow($i27, 2.0))) - (98.0 * $i27)) + (100.0 * math:pow($i26, 2.0))) - (98.0 * $i26)) + (100.0 * math:pow($i25, 2.0))) - (98.0 * $i25)) + (100.0 * math:pow($i24, 2.0))) - (98.0 * $i24)) + (100.0 * math:pow($i23, 2.0))) - (98.0 * $i23)) + (100.0 * math:pow($i22, 2.0))) - (98.0 * $i22)) + (100.0 * math:pow($i21, 2.0))) - (98.0 * $i21)) + (100.0 * math:pow($i20, 2.0))) - (98.0 * $i20)) + (100.0 * math:pow($i19, 2.0))) - (98.0 * $i19)) + (100.0 * math:pow($i18, 2.0))) - (98.0 * $i18)) + (100.0 * math:pow($i17, 2.0))) - (98.0 * $i17)) + (100.0 * math:pow($i16, 2.0))) - (98.0 * $i16)) + (100.0 * math:pow($i15, 2.0))) - (98.0 * $i15)) + (100.0 * math:pow($i14, 2.0))) - (98.0 * $i14)) + (100.0 * math:pow($i13, 2.0))) - (98.0 * $i13)) + (100.0 * math:pow($i12, 2.0))) - (98.0 * $i12)) + (100.0 * math:pow($i11, 2.0))) - (98.0 * $i11)) + (100.0 * math:pow($i10, 2.0))) - (98.0 * $i10)) + (100.0 * math:pow($i9, 2.0))) - (98.0 * $i9)) + (100.0 * math:pow($i8, 2.0))) - (98.0 * $i8)) + (100.0 * math:pow($i7, 2.0))) - (98.0 * $i7)) + (100.0 * math:pow($i6, 2.0))) - (98.0 * $i6)) + (100.0 * math:pow($i5, 2.0))) - (98.0 * $i5)) + (100.0 * math:pow($i4, 2.0))) - (98.0 * $i4)) + (100.0 * math:pow($i3, 2.0))) - (98.0 * $i3)) + (100.0 * math:pow($i2, 2.0))) - (98.0 * $i2)) + (100.0 * math:pow($i31, 2.0))) - (98.0 * $i31)) - ((2.0 * $i30) * $i29)) - ((2.0 * $i30) * $i29)) - ((2.0 * $i28) * $i27)) - ((2.0 * $i28) * $i27)) - ((2.0 * $i26) * $i25)) - ((2.0 * $i26) * $i25)) - ((2.0 * $i24) * $i23)) - ((2.0 * $i24) * $i23)) - ((2.0 * $i22) * $i21)) - ((2.0 * $i22) * $i21)) - ((2.0 * $i20) * $i19)) - ((2.0 * $i20) * $i19)) - ((2.0 * $i18) * $i17)) - ((2.0 * $i18) * $i17)) - ((2.0 * $i16) * $i15)) - ((2.0 * $i16) * $i15)) - ((2.0 * $i14) * $i13)) - ((2.0 * $i14) * $i13)) - ((2.0 * $i12) * $i11)) - ((2.0 * $i12) * $i11)) - ((2.0 * $i10) * $i9)) - ((2.0 * $i10) * $i9)) - ((2.0 * $i8) * $i7)) - ((2.0 * $i8) * $i7)) - ((2.0 * $i6) * $i5)) - ((2.0 * $i6) * $i5)) - ((2.0 * $i4) * $i3)) - ((2.0 * $i4) * $i3)) - ((2.0 * $i2) * $i31)) - ((2.0 * $i2) * $i31)) <= -1.0
        }
    }
};


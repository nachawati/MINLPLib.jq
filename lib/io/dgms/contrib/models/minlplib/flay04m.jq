jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/flay04m";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:flay04m($input)
{
    let $x1 := $input.x1
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $b19 := $input.b19
    let $b20 := $input.b20
    let $b21 := $input.b21
    let $b22 := $input.b22
    let $b23 := $input.b23
    let $b24 := $input.b24
    let $b25 := $input.b25
    let $b26 := $input.b26
    let $b27 := $input.b27
    let $b28 := $input.b28
    let $b29 := $input.b29
    let $b30 := $input.b30
    let $b31 := $input.b31
    let $b32 := $input.b32
    let $b33 := $input.b33
    let $b34 := $input.b34
    let $b35 := $input.b35
    let $b36 := $input.b36
    let $b37 := $input.b37
    let $b38 := $input.b38
    let $b39 := $input.b39
    let $b40 := $input.b40
    let $b41 := $input.b41
    let $b42 := $input.b42
    return {
        "obj": ((2.0 * $x17) + (2.0 * $x18)),
        "constraints": {
            "e2": -(($x1 - $x9) + $x17) >= 0.0,
            "e3": -(($x2 - $x10) + $x17) >= 0.0,
            "e4": -(($x3 - $x11) + $x17) >= 0.0,
            "e5": -(($x4 - $x12) + $x17) >= 0.0,
            "e6": -(($x5 - $x13) + $x18) >= 0.0,
            "e7": -(($x6 - $x14) + $x18) >= 0.0,
            "e8": -(($x7 - $x15) + $x18) >= 0.0,
            "e9": -(($x8 - $x16) + $x18) >= 0.0,
            "e10": ((40.0 idiv $x13) - $x9) <= 0.0,
            "e11": ((50.0 idiv $x14) - $x10) <= 0.0,
            "e12": ((60.0 idiv $x15) - $x11) <= 0.0,
            "e13": ((35.0 idiv $x16) - $x12) <= 0.0,
            "e14": ((($x1 - $x2) + $x9) + (110.333333333333 * $b19)) <= 110.333333333333,
            "e15": ((($x1 - $x3) + $x9) + (110.333333333333 * $b20)) <= 110.333333333333,
            "e16": ((($x1 - $x4) + $x9) + (110.333333333333 * $b21)) <= 110.333333333333,
            "e17": ((($x2 - $x3) + $x10) + (113.666666666667 * $b22)) <= 113.666666666667,
            "e18": ((($x2 - $x4) + $x10) + (113.666666666667 * $b23)) <= 113.666666666667,
            "e19": ((($x3 - $x4) + $x11) + (117.0 * $b24)) <= 117.0,
            "e20": -((($x1 + $x2) + $x10) + (113.666666666667 * $b25)) <= 113.666666666667,
            "e21": -((($x1 + $x3) + $x11) + (117.0 * $b26)) <= 117.0,
            "e22": -((($x1 + $x4) + $x12) + (108.666666666667 * $b27)) <= 108.666666666667,
            "e23": -((($x2 + $x3) + $x11) + (117.0 * $b28)) <= 117.0,
            "e24": -((($x2 + $x4) + $x12) + (108.666666666667 * $b29)) <= 108.666666666667,
            "e25": -((($x3 + $x4) + $x12) + (108.666666666667 * $b30)) <= 108.666666666667,
            "e26": ((($x5 - $x6) + $x13) + (110.333333333333 * $b31)) <= 110.333333333333,
            "e27": ((($x5 - $x7) + $x13) + (110.333333333333 * $b32)) <= 110.333333333333,
            "e28": ((($x5 - $x8) + $x13) + (110.333333333333 * $b33)) <= 110.333333333333,
            "e29": ((($x6 - $x7) + $x14) + (113.666666666667 * $b34)) <= 113.666666666667,
            "e30": ((($x6 - $x8) + $x14) + (113.666666666667 * $b35)) <= 113.666666666667,
            "e31": ((($x7 - $x8) + $x15) + (117.0 * $b36)) <= 117.0,
            "e32": -((($x5 + $x6) + $x14) + (113.666666666667 * $b37)) <= 113.666666666667,
            "e33": -((($x5 + $x7) + $x15) + (117.0 * $b38)) <= 117.0,
            "e34": -((($x5 + $x8) + $x16) + (108.666666666667 * $b39)) <= 108.666666666667,
            "e35": -((($x6 + $x7) + $x15) + (117.0 * $b40)) <= 117.0,
            "e36": -((($x6 + $x8) + $x16) + (108.666666666667 * $b41)) <= 108.666666666667,
            "e37": -((($x7 + $x8) + $x16) + (108.666666666667 * $b42)) <= 108.666666666667,
            "e38": ((($b19 + $b25) + $b31) + $b37) = 1.0,
            "e39": ((($b20 + $b26) + $b32) + $b38) = 1.0,
            "e40": ((($b21 + $b27) + $b33) + $b39) = 1.0,
            "e41": ((($b22 + $b28) + $b34) + $b40) = 1.0,
            "e42": ((($b23 + $b29) + $b35) + $b41) = 1.0,
            "e43": ((($b24 + $b30) + $b36) + $b42) = 1.0
        }
    }
};


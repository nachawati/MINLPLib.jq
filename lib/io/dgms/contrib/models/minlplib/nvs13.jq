jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/nvs13";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:nvs13($input)
{
    let $i1 := $input.i1
    let $i2 := $input.i2
    let $i3 := $input.i3
    let $i4 := $input.i4
    let $i5 := $input.i5
    return {
        "obj": (((((((((((((((((7.0 * math:pow($i1, 2.0)) + (6.0 * math:pow($i2, 2.0))) + (12.0 * $i1)) - (77.2 * $i2)) + (8.0 * math:pow($i3, 2.0))) - ((6.0 * $i3) * $i1)) + ((4.0 * $i3) * $i2)) - (19.2 * $i3)) + (6.0 * math:pow($i4, 2.0))) + ((2.0 * $i4) * $i1)) + ((2.0 * $i4) * $i3)) - (36.6 * $i4)) + (7.0 * math:pow($i5, 2.0))) - ((4.0 * $i5) * $i1)) - ((2.0 * $i5) * $i2)) - ((6.0 * $i5) * $i3)) - (69.4 * $i5)),
        "constraints": {
            "e1": (((((((((((-(9.0 * math:pow($i1, 2.0)) - ((10.0 * $i1) * $i2)) - (8.0 * math:pow($i2, 2.0))) - (5.0 * math:pow($i3, 2.0))) - ((6.0 * $i3) * $i1)) - ((10.0 * $i3) * $i2)) - (7.0 * math:pow($i4, 2.0))) - ((10.0 * $i4) * $i1)) - ((6.0 * $i4) * $i2)) - ((2.0 * $i4) * $i3)) - ((2.0 * $i5) * $i2)) - (7.0 * math:pow($i5, 2.0))) >= -1430.0,
            "e2": ((((((((((((-(6.0 * math:pow($i1, 2.0)) - ((8.0 * $i1) * $i2)) - (6.0 * math:pow($i2, 2.0))) - (4.0 * math:pow($i3, 2.0))) - ((2.0 * $i3) * $i1)) - ((2.0 * $i3) * $i2)) - (8.0 * math:pow($i4, 2.0))) + ((2.0 * $i4) * $i1)) + ((10.0 * $i4) * $i2)) - ((2.0 * $i5) * $i1)) - ((6.0 * $i5) * $i2)) + ((6.0 * $i5) * $i4)) + (7.0 * math:pow($i5, 2.0))) >= -1150.0,
            "e3": ((((((((((((-(9.0 * math:pow($i1, 2.0)) - (6.0 * math:pow($i2, 2.0))) - (8.0 * math:pow($i3, 2.0))) + ((2.0 * $i2) * $i1)) + ((2.0 * $i3) * $i2)) - (6.0 * math:pow($i4, 2.0))) + ((4.0 * $i4) * $i1)) + ((4.0 * $i4) * $i2)) - ((2.0 * $i4) * $i3)) - ((6.0 * $i5) * $i1)) - ((2.0 * $i5) * $i2)) + ((4.0 * $i5) * $i4)) + (6.0 * math:pow($i5, 2.0))) >= -850.0,
            "e4": ((((((((((((((-(8.0 * math:pow($i1, 2.0)) - (4.0 * math:pow($i2, 2.0))) - (9.0 * math:pow($i3, 2.0))) - (7.0 * math:pow($i4, 2.0))) - ((2.0 * $i2) * $i1)) - ((2.0 * $i3) * $i1)) - ((4.0 * $i3) * $i2)) + ((6.0 * $i4) * $i1)) + ((2.0 * $i4) * $i2)) - ((2.0 * $i4) * $i3)) - ((6.0 * $i5) * $i1)) - ((4.0 * $i5) * $i2)) - ((2.0 * $i5) * $i3)) + ((6.0 * $i5) * $i4)) + (6.0 * math:pow($i5, 2.0))) >= -1125.0,
            "e5": (((((((((((((((2.0 * $i2) * $i1) - (4.0 * math:pow($i1, 2.0))) - (5.0 * math:pow($i2, 2.0))) - ((6.0 * $i3) * $i1)) - (8.0 * math:pow($i3, 2.0))) - ((2.0 * $i4) * $i1)) + ((6.0 * $i4) * $i2)) - ((2.0 * $i4) * $i3)) - (6.0 * math:pow($i4, 2.0))) - ((4.0 * $i5) * $i1)) + ((2.0 * $i5) * $i2)) - ((6.0 * $i5) * $i3)) - ((8.0 * $i5) * $i4)) - (7.0 * math:pow($i5, 2.0))) >= -1030.0
        }
    }
};


jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/chain50";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:chain50($input)
{
    let $x1 := $input.x1
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    let $x31 := $input.x31
    let $x32 := $input.x32
    let $x33 := $input.x33
    let $x34 := $input.x34
    let $x35 := $input.x35
    let $x36 := $input.x36
    let $x37 := $input.x37
    let $x38 := $input.x38
    let $x39 := $input.x39
    let $x40 := $input.x40
    let $x41 := $input.x41
    let $x42 := $input.x42
    let $x43 := $input.x43
    let $x44 := $input.x44
    let $x45 := $input.x45
    let $x46 := $input.x46
    let $x47 := $input.x47
    let $x48 := $input.x48
    let $x49 := $input.x49
    let $x50 := $input.x50
    let $x51 := $input.x51
    let $x52 := $input.x52
    let $x53 := $input.x53
    let $x54 := $input.x54
    let $x55 := $input.x55
    let $x56 := $input.x56
    let $x57 := $input.x57
    let $x58 := $input.x58
    let $x59 := $input.x59
    let $x60 := $input.x60
    let $x61 := $input.x61
    let $x62 := $input.x62
    let $x63 := $input.x63
    let $x64 := $input.x64
    let $x65 := $input.x65
    let $x66 := $input.x66
    let $x67 := $input.x67
    let $x68 := $input.x68
    let $x69 := $input.x69
    let $x70 := $input.x70
    let $x71 := $input.x71
    let $x72 := $input.x72
    let $x73 := $input.x73
    let $x74 := $input.x74
    let $x75 := $input.x75
    let $x76 := $input.x76
    let $x77 := $input.x77
    let $x78 := $input.x78
    let $x79 := $input.x79
    let $x80 := $input.x80
    let $x81 := $input.x81
    let $x82 := $input.x82
    let $x83 := $input.x83
    let $x84 := $input.x84
    let $x85 := $input.x85
    let $x86 := $input.x86
    let $x87 := $input.x87
    let $x88 := $input.x88
    let $x89 := $input.x89
    let $x90 := $input.x90
    let $x91 := $input.x91
    let $x92 := $input.x92
    let $x93 := $input.x93
    let $x94 := $input.x94
    let $x95 := $input.x95
    let $x96 := $input.x96
    let $x97 := $input.x97
    let $x98 := $input.x98
    let $x99 := $input.x99
    let $x100 := $input.x100
    let $x101 := $input.x101
    let $x102 := $input.x102
    return {
        "obj": (0.01 * ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((math:sqrt((1.0 + math:pow($x52, 2.0))) * $x1) + (math:sqrt((1.0 + math:pow($x53, 2.0))) * $x2)) + (math:sqrt((1.0 + math:pow($x53, 2.0))) * $x2)) + (math:sqrt((1.0 + math:pow($x54, 2.0))) * $x3)) + (math:sqrt((1.0 + math:pow($x54, 2.0))) * $x3)) + (math:sqrt((1.0 + math:pow($x55, 2.0))) * $x4)) + (math:sqrt((1.0 + math:pow($x55, 2.0))) * $x4)) + (math:sqrt((1.0 + math:pow($x56, 2.0))) * $x5)) + (math:sqrt((1.0 + math:pow($x56, 2.0))) * $x5)) + (math:sqrt((1.0 + math:pow($x57, 2.0))) * $x6)) + (math:sqrt((1.0 + math:pow($x57, 2.0))) * $x6)) + (math:sqrt((1.0 + math:pow($x58, 2.0))) * $x7)) + (math:sqrt((1.0 + math:pow($x58, 2.0))) * $x7)) + (math:sqrt((1.0 + math:pow($x59, 2.0))) * $x8)) + (math:sqrt((1.0 + math:pow($x59, 2.0))) * $x8)) + (math:sqrt((1.0 + math:pow($x60, 2.0))) * $x9)) + (math:sqrt((1.0 + math:pow($x60, 2.0))) * $x9)) + (math:sqrt((1.0 + math:pow($x61, 2.0))) * $x10)) + (math:sqrt((1.0 + math:pow($x61, 2.0))) * $x10)) + (math:sqrt((1.0 + math:pow($x62, 2.0))) * $x11)) + (math:sqrt((1.0 + math:pow($x62, 2.0))) * $x11)) + (math:sqrt((1.0 + math:pow($x63, 2.0))) * $x12)) + (math:sqrt((1.0 + math:pow($x63, 2.0))) * $x12)) + (math:sqrt((1.0 + math:pow($x64, 2.0))) * $x13)) + (math:sqrt((1.0 + math:pow($x64, 2.0))) * $x13)) + (math:sqrt((1.0 + math:pow($x65, 2.0))) * $x14)) + (math:sqrt((1.0 + math:pow($x65, 2.0))) * $x14)) + (math:sqrt((1.0 + math:pow($x66, 2.0))) * $x15)) + (math:sqrt((1.0 + math:pow($x66, 2.0))) * $x15)) + (math:sqrt((1.0 + math:pow($x67, 2.0))) * $x16)) + (math:sqrt((1.0 + math:pow($x67, 2.0))) * $x16)) + (math:sqrt((1.0 + math:pow($x68, 2.0))) * $x17)) + (math:sqrt((1.0 + math:pow($x68, 2.0))) * $x17)) + (math:sqrt((1.0 + math:pow($x69, 2.0))) * $x18)) + (math:sqrt((1.0 + math:pow($x69, 2.0))) * $x18)) + (math:sqrt((1.0 + math:pow($x70, 2.0))) * $x19)) + (math:sqrt((1.0 + math:pow($x70, 2.0))) * $x19)) + (math:sqrt((1.0 + math:pow($x71, 2.0))) * $x20)) + (math:sqrt((1.0 + math:pow($x71, 2.0))) * $x20)) + (math:sqrt((1.0 + math:pow($x72, 2.0))) * $x21)) + (math:sqrt((1.0 + math:pow($x72, 2.0))) * $x21)) + (math:sqrt((1.0 + math:pow($x73, 2.0))) * $x22)) + (math:sqrt((1.0 + math:pow($x73, 2.0))) * $x22)) + (math:sqrt((1.0 + math:pow($x74, 2.0))) * $x23)) + (math:sqrt((1.0 + math:pow($x74, 2.0))) * $x23)) + (math:sqrt((1.0 + math:pow($x75, 2.0))) * $x24)) + (math:sqrt((1.0 + math:pow($x75, 2.0))) * $x24)) + (math:sqrt((1.0 + math:pow($x76, 2.0))) * $x25)) + (math:sqrt((1.0 + math:pow($x76, 2.0))) * $x25)) + (math:sqrt((1.0 + math:pow($x77, 2.0))) * $x26)) + (math:sqrt((1.0 + math:pow($x77, 2.0))) * $x26)) + (math:sqrt((1.0 + math:pow($x78, 2.0))) * $x27)) + (math:sqrt((1.0 + math:pow($x78, 2.0))) * $x27)) + (math:sqrt((1.0 + math:pow($x79, 2.0))) * $x28)) + (math:sqrt((1.0 + math:pow($x79, 2.0))) * $x28)) + (math:sqrt((1.0 + math:pow($x80, 2.0))) * $x29)) + (math:sqrt((1.0 + math:pow($x80, 2.0))) * $x29)) + (math:sqrt((1.0 + math:pow($x81, 2.0))) * $x30)) + (math:sqrt((1.0 + math:pow($x81, 2.0))) * $x30)) + (math:sqrt((1.0 + math:pow($x82, 2.0))) * $x31)) + (math:sqrt((1.0 + math:pow($x82, 2.0))) * $x31)) + (math:sqrt((1.0 + math:pow($x83, 2.0))) * $x32)) + (math:sqrt((1.0 + math:pow($x83, 2.0))) * $x32)) + (math:sqrt((1.0 + math:pow($x84, 2.0))) * $x33)) + (math:sqrt((1.0 + math:pow($x84, 2.0))) * $x33)) + (math:sqrt((1.0 + math:pow($x85, 2.0))) * $x34)) + (math:sqrt((1.0 + math:pow($x85, 2.0))) * $x34)) + (math:sqrt((1.0 + math:pow($x86, 2.0))) * $x35)) + (math:sqrt((1.0 + math:pow($x86, 2.0))) * $x35)) + (math:sqrt((1.0 + math:pow($x87, 2.0))) * $x36)) + (math:sqrt((1.0 + math:pow($x87, 2.0))) * $x36)) + (math:sqrt((1.0 + math:pow($x88, 2.0))) * $x37)) + (math:sqrt((1.0 + math:pow($x88, 2.0))) * $x37)) + (math:sqrt((1.0 + math:pow($x89, 2.0))) * $x38)) + (math:sqrt((1.0 + math:pow($x89, 2.0))) * $x38)) + (math:sqrt((1.0 + math:pow($x90, 2.0))) * $x39)) + (math:sqrt((1.0 + math:pow($x90, 2.0))) * $x39)) + (math:sqrt((1.0 + math:pow($x91, 2.0))) * $x40)) + (math:sqrt((1.0 + math:pow($x91, 2.0))) * $x40)) + (math:sqrt((1.0 + math:pow($x92, 2.0))) * $x41)) + (math:sqrt((1.0 + math:pow($x92, 2.0))) * $x41)) + (math:sqrt((1.0 + math:pow($x93, 2.0))) * $x42)) + (math:sqrt((1.0 + math:pow($x93, 2.0))) * $x42)) + (math:sqrt((1.0 + math:pow($x94, 2.0))) * $x43)) + (math:sqrt((1.0 + math:pow($x94, 2.0))) * $x43)) + (math:sqrt((1.0 + math:pow($x95, 2.0))) * $x44)) + (math:sqrt((1.0 + math:pow($x95, 2.0))) * $x44)) + (math:sqrt((1.0 + math:pow($x96, 2.0))) * $x45)) + (math:sqrt((1.0 + math:pow($x96, 2.0))) * $x45)) + (math:sqrt((1.0 + math:pow($x97, 2.0))) * $x46)) + (math:sqrt((1.0 + math:pow($x97, 2.0))) * $x46)) + (math:sqrt((1.0 + math:pow($x98, 2.0))) * $x47)) + (math:sqrt((1.0 + math:pow($x98, 2.0))) * $x47)) + (math:sqrt((1.0 + math:pow($x99, 2.0))) * $x48)) + (math:sqrt((1.0 + math:pow($x99, 2.0))) * $x48)) + (math:sqrt((1.0 + math:pow($x100, 2.0))) * $x49)) + (math:sqrt((1.0 + math:pow($x100, 2.0))) * $x49)) + (math:sqrt((1.0 + math:pow($x101, 2.0))) * $x50)) + (math:sqrt((1.0 + math:pow($x101, 2.0))) * $x50)) + (math:sqrt((1.0 + math:pow($x102, 2.0))) * $x51))),
        "constraints": {
            "e2": -((($x1 + $x2) - (0.01 * $x52)) - (0.01 * $x53)) = 0.0,
            "e3": -((($x2 + $x3) - (0.01 * $x53)) - (0.01 * $x54)) = 0.0,
            "e4": -((($x3 + $x4) - (0.01 * $x54)) - (0.01 * $x55)) = 0.0,
            "e5": -((($x4 + $x5) - (0.01 * $x55)) - (0.01 * $x56)) = 0.0,
            "e6": -((($x5 + $x6) - (0.01 * $x56)) - (0.01 * $x57)) = 0.0,
            "e7": -((($x6 + $x7) - (0.01 * $x57)) - (0.01 * $x58)) = 0.0,
            "e8": -((($x7 + $x8) - (0.01 * $x58)) - (0.01 * $x59)) = 0.0,
            "e9": -((($x8 + $x9) - (0.01 * $x59)) - (0.01 * $x60)) = 0.0,
            "e10": -((($x9 + $x10) - (0.01 * $x60)) - (0.01 * $x61)) = 0.0,
            "e11": -((($x10 + $x11) - (0.01 * $x61)) - (0.01 * $x62)) = 0.0,
            "e12": -((($x11 + $x12) - (0.01 * $x62)) - (0.01 * $x63)) = 0.0,
            "e13": -((($x12 + $x13) - (0.01 * $x63)) - (0.01 * $x64)) = 0.0,
            "e14": -((($x13 + $x14) - (0.01 * $x64)) - (0.01 * $x65)) = 0.0,
            "e15": -((($x14 + $x15) - (0.01 * $x65)) - (0.01 * $x66)) = 0.0,
            "e16": -((($x15 + $x16) - (0.01 * $x66)) - (0.01 * $x67)) = 0.0,
            "e17": -((($x16 + $x17) - (0.01 * $x67)) - (0.01 * $x68)) = 0.0,
            "e18": -((($x17 + $x18) - (0.01 * $x68)) - (0.01 * $x69)) = 0.0,
            "e19": -((($x18 + $x19) - (0.01 * $x69)) - (0.01 * $x70)) = 0.0,
            "e20": -((($x19 + $x20) - (0.01 * $x70)) - (0.01 * $x71)) = 0.0,
            "e21": -((($x20 + $x21) - (0.01 * $x71)) - (0.01 * $x72)) = 0.0,
            "e22": -((($x21 + $x22) - (0.01 * $x72)) - (0.01 * $x73)) = 0.0,
            "e23": -((($x22 + $x23) - (0.01 * $x73)) - (0.01 * $x74)) = 0.0,
            "e24": -((($x23 + $x24) - (0.01 * $x74)) - (0.01 * $x75)) = 0.0,
            "e25": -((($x24 + $x25) - (0.01 * $x75)) - (0.01 * $x76)) = 0.0,
            "e26": -((($x25 + $x26) - (0.01 * $x76)) - (0.01 * $x77)) = 0.0,
            "e27": -((($x26 + $x27) - (0.01 * $x77)) - (0.01 * $x78)) = 0.0,
            "e28": -((($x27 + $x28) - (0.01 * $x78)) - (0.01 * $x79)) = 0.0,
            "e29": -((($x28 + $x29) - (0.01 * $x79)) - (0.01 * $x80)) = 0.0,
            "e30": -((($x29 + $x30) - (0.01 * $x80)) - (0.01 * $x81)) = 0.0,
            "e31": -((($x30 + $x31) - (0.01 * $x81)) - (0.01 * $x82)) = 0.0,
            "e32": -((($x31 + $x32) - (0.01 * $x82)) - (0.01 * $x83)) = 0.0,
            "e33": -((($x32 + $x33) - (0.01 * $x83)) - (0.01 * $x84)) = 0.0,
            "e34": -((($x33 + $x34) - (0.01 * $x84)) - (0.01 * $x85)) = 0.0,
            "e35": -((($x34 + $x35) - (0.01 * $x85)) - (0.01 * $x86)) = 0.0,
            "e36": -((($x35 + $x36) - (0.01 * $x86)) - (0.01 * $x87)) = 0.0,
            "e37": -((($x36 + $x37) - (0.01 * $x87)) - (0.01 * $x88)) = 0.0,
            "e38": -((($x37 + $x38) - (0.01 * $x88)) - (0.01 * $x89)) = 0.0,
            "e39": -((($x38 + $x39) - (0.01 * $x89)) - (0.01 * $x90)) = 0.0,
            "e40": -((($x39 + $x40) - (0.01 * $x90)) - (0.01 * $x91)) = 0.0,
            "e41": -((($x40 + $x41) - (0.01 * $x91)) - (0.01 * $x92)) = 0.0,
            "e42": -((($x41 + $x42) - (0.01 * $x92)) - (0.01 * $x93)) = 0.0,
            "e43": -((($x42 + $x43) - (0.01 * $x93)) - (0.01 * $x94)) = 0.0,
            "e44": -((($x43 + $x44) - (0.01 * $x94)) - (0.01 * $x95)) = 0.0,
            "e45": -((($x44 + $x45) - (0.01 * $x95)) - (0.01 * $x96)) = 0.0,
            "e46": -((($x45 + $x46) - (0.01 * $x96)) - (0.01 * $x97)) = 0.0,
            "e47": -((($x46 + $x47) - (0.01 * $x97)) - (0.01 * $x98)) = 0.0,
            "e48": -((($x47 + $x48) - (0.01 * $x98)) - (0.01 * $x99)) = 0.0,
            "e49": -((($x48 + $x49) - (0.01 * $x99)) - (0.01 * $x100)) = 0.0,
            "e50": -((($x49 + $x50) - (0.01 * $x100)) - (0.01 * $x101)) = 0.0,
            "e51": -((($x50 + $x51) - (0.01 * $x101)) - (0.01 * $x102)) = 0.0,
            "e52": (0.01 * (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((math:sqrt((1.0 + math:pow($x52, 2.0))) + math:sqrt((1.0 + math:pow($x53, 2.0)))) + math:sqrt((1.0 + math:pow($x53, 2.0)))) + math:sqrt((1.0 + math:pow($x54, 2.0)))) + math:sqrt((1.0 + math:pow($x54, 2.0)))) + math:sqrt((1.0 + math:pow($x55, 2.0)))) + math:sqrt((1.0 + math:pow($x55, 2.0)))) + math:sqrt((1.0 + math:pow($x56, 2.0)))) + math:sqrt((1.0 + math:pow($x56, 2.0)))) + math:sqrt((1.0 + math:pow($x57, 2.0)))) + math:sqrt((1.0 + math:pow($x57, 2.0)))) + math:sqrt((1.0 + math:pow($x58, 2.0)))) + math:sqrt((1.0 + math:pow($x58, 2.0)))) + math:sqrt((1.0 + math:pow($x59, 2.0)))) + math:sqrt((1.0 + math:pow($x59, 2.0)))) + math:sqrt((1.0 + math:pow($x60, 2.0)))) + math:sqrt((1.0 + math:pow($x60, 2.0)))) + math:sqrt((1.0 + math:pow($x61, 2.0)))) + math:sqrt((1.0 + math:pow($x61, 2.0)))) + math:sqrt((1.0 + math:pow($x62, 2.0)))) + math:sqrt((1.0 + math:pow($x62, 2.0)))) + math:sqrt((1.0 + math:pow($x63, 2.0)))) + math:sqrt((1.0 + math:pow($x63, 2.0)))) + math:sqrt((1.0 + math:pow($x64, 2.0)))) + math:sqrt((1.0 + math:pow($x64, 2.0)))) + math:sqrt((1.0 + math:pow($x65, 2.0)))) + math:sqrt((1.0 + math:pow($x65, 2.0)))) + math:sqrt((1.0 + math:pow($x66, 2.0)))) + math:sqrt((1.0 + math:pow($x66, 2.0)))) + math:sqrt((1.0 + math:pow($x67, 2.0)))) + math:sqrt((1.0 + math:pow($x67, 2.0)))) + math:sqrt((1.0 + math:pow($x68, 2.0)))) + math:sqrt((1.0 + math:pow($x68, 2.0)))) + math:sqrt((1.0 + math:pow($x69, 2.0)))) + math:sqrt((1.0 + math:pow($x69, 2.0)))) + math:sqrt((1.0 + math:pow($x70, 2.0)))) + math:sqrt((1.0 + math:pow($x70, 2.0)))) + math:sqrt((1.0 + math:pow($x71, 2.0)))) + math:sqrt((1.0 + math:pow($x71, 2.0)))) + math:sqrt((1.0 + math:pow($x72, 2.0)))) + math:sqrt((1.0 + math:pow($x72, 2.0)))) + math:sqrt((1.0 + math:pow($x73, 2.0)))) + math:sqrt((1.0 + math:pow($x73, 2.0)))) + math:sqrt((1.0 + math:pow($x74, 2.0)))) + math:sqrt((1.0 + math:pow($x74, 2.0)))) + math:sqrt((1.0 + math:pow($x75, 2.0)))) + math:sqrt((1.0 + math:pow($x75, 2.0)))) + math:sqrt((1.0 + math:pow($x76, 2.0)))) + math:sqrt((1.0 + math:pow($x76, 2.0)))) + math:sqrt((1.0 + math:pow($x77, 2.0)))) + math:sqrt((1.0 + math:pow($x77, 2.0)))) + math:sqrt((1.0 + math:pow($x78, 2.0)))) + math:sqrt((1.0 + math:pow($x78, 2.0)))) + math:sqrt((1.0 + math:pow($x79, 2.0)))) + math:sqrt((1.0 + math:pow($x79, 2.0)))) + math:sqrt((1.0 + math:pow($x80, 2.0)))) + math:sqrt((1.0 + math:pow($x80, 2.0)))) + math:sqrt((1.0 + math:pow($x81, 2.0)))) + math:sqrt((1.0 + math:pow($x81, 2.0)))) + math:sqrt((1.0 + math:pow($x82, 2.0)))) + math:sqrt((1.0 + math:pow($x82, 2.0)))) + math:sqrt((1.0 + math:pow($x83, 2.0)))) + math:sqrt((1.0 + math:pow($x83, 2.0)))) + math:sqrt((1.0 + math:pow($x84, 2.0)))) + math:sqrt((1.0 + math:pow($x84, 2.0)))) + math:sqrt((1.0 + math:pow($x85, 2.0)))) + math:sqrt((1.0 + math:pow($x85, 2.0)))) + math:sqrt((1.0 + math:pow($x86, 2.0)))) + math:sqrt((1.0 + math:pow($x86, 2.0)))) + math:sqrt((1.0 + math:pow($x87, 2.0)))) + math:sqrt((1.0 + math:pow($x87, 2.0)))) + math:sqrt((1.0 + math:pow($x88, 2.0)))) + math:sqrt((1.0 + math:pow($x88, 2.0)))) + math:sqrt((1.0 + math:pow($x89, 2.0)))) + math:sqrt((1.0 + math:pow($x89, 2.0)))) + math:sqrt((1.0 + math:pow($x90, 2.0)))) + math:sqrt((1.0 + math:pow($x90, 2.0)))) + math:sqrt((1.0 + math:pow($x91, 2.0)))) + math:sqrt((1.0 + math:pow($x91, 2.0)))) + math:sqrt((1.0 + math:pow($x92, 2.0)))) + math:sqrt((1.0 + math:pow($x92, 2.0)))) + math:sqrt((1.0 + math:pow($x93, 2.0)))) + math:sqrt((1.0 + math:pow($x93, 2.0)))) + math:sqrt((1.0 + math:pow($x94, 2.0)))) + math:sqrt((1.0 + math:pow($x94, 2.0)))) + math:sqrt((1.0 + math:pow($x95, 2.0)))) + math:sqrt((1.0 + math:pow($x95, 2.0)))) + math:sqrt((1.0 + math:pow($x96, 2.0)))) + math:sqrt((1.0 + math:pow($x96, 2.0)))) + math:sqrt((1.0 + math:pow($x97, 2.0)))) + math:sqrt((1.0 + math:pow($x97, 2.0)))) + math:sqrt((1.0 + math:pow($x98, 2.0)))) + math:sqrt((1.0 + math:pow($x98, 2.0)))) + math:sqrt((1.0 + math:pow($x99, 2.0)))) + math:sqrt((1.0 + math:pow($x99, 2.0)))) + math:sqrt((1.0 + math:pow($x100, 2.0)))) + math:sqrt((1.0 + math:pow($x100, 2.0)))) + math:sqrt((1.0 + math:pow($x101, 2.0)))) + math:sqrt((1.0 + math:pow($x101, 2.0)))) + math:sqrt((1.0 + math:pow($x102, 2.0))))) = 4.0
        }
    }
};


jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/hybriddynamic_var";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:hybriddynamic_var($input)
{
    let $x1 := $input.x1
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $b11 := $input.b11
    let $b12 := $input.b12
    let $b13 := $input.b13
    let $b14 := $input.b14
    let $b15 := $input.b15
    let $b16 := $input.b16
    let $b17 := $input.b17
    let $b18 := $input.b18
    let $b19 := $input.b19
    let $b20 := $input.b20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    let $x31 := $input.x31
    let $x32 := $input.x32
    let $x33 := $input.x33
    let $x34 := $input.x34
    let $x35 := $input.x35
    let $x36 := $input.x36
    let $x37 := $input.x37
    let $x38 := $input.x38
    let $x39 := $input.x39
    let $x40 := $input.x40
    let $x41 := $input.x41
    let $x42 := $input.x42
    let $x43 := $input.x43
    let $x44 := $input.x44
    let $x45 := $input.x45
    let $x46 := $input.x46
    let $x47 := $input.x47
    let $x48 := $input.x48
    let $x49 := $input.x49
    let $x50 := $input.x50
    let $x51 := $input.x51
    let $x52 := $input.x52
    let $x53 := $input.x53
    let $x54 := $input.x54
    let $x55 := $input.x55
    let $x56 := $input.x56
    let $x57 := $input.x57
    let $x58 := $input.x58
    let $x59 := $input.x59
    let $x60 := $input.x60
    let $x61 := $input.x61
    let $x62 := $input.x62
    let $x63 := $input.x63
    let $x64 := $input.x64
    let $x65 := $input.x65
    let $x66 := $input.x66
    let $x67 := $input.x67
    let $x68 := $input.x68
    let $x69 := $input.x69
    let $x70 := $input.x70
    let $x71 := $input.x71
    let $x72 := $input.x72
    let $x73 := $input.x73
    let $x74 := $input.x74
    let $x75 := $input.x75
    let $x76 := $input.x76
    let $x77 := $input.x77
    let $x78 := $input.x78
    let $x79 := $input.x79
    let $x80 := $input.x80
    let $x81 := $input.x81
    return {
        "obj": ((((((((((math:pow(-(1.66666666666667 + $x81), 2.0) + (math:pow($x61, 2.0) * $x21)) + (math:pow($x62, 2.0) * $x22)) + (math:pow($x63, 2.0) * $x23)) + (math:pow($x64, 2.0) * $x24)) + (math:pow($x65, 2.0) * $x25)) + (math:pow($x66, 2.0) * $x26)) + (math:pow($x67, 2.0) * $x27)) + (math:pow($x68, 2.0) * $x28)) + (math:pow($x69, 2.0) * $x29)) + (math:pow($x70, 2.0) * $x30)),
        "constraints": {
            "e2": -(($x21 - $x41) + $x51) = 0.0,
            "e3": -(($x22 - $x42) + $x52) = 0.0,
            "e4": -(($x23 - $x43) + $x53) = 0.0,
            "e5": -(($x24 - $x44) + $x54) = 0.0,
            "e6": -(($x25 - $x45) + $x55) = 0.0,
            "e7": -(($x26 - $x46) + $x56) = 0.0,
            "e8": -(($x27 - $x47) + $x57) = 0.0,
            "e9": -(($x28 - $x48) + $x58) = 0.0,
            "e10": -(($x29 - $x49) + $x59) = 0.0,
            "e11": -(($x30 - $x50) + $x60) = 0.0,
            "e12": -((($x21 * $x71) - $x31) + $x61) = 0.0,
            "e13": -((($x22 * $x72) - $x32) + $x62) = 0.0,
            "e14": -((($x23 * $x73) - $x33) + $x63) = 0.0,
            "e15": -((($x24 * $x74) - $x34) + $x64) = 0.0,
            "e16": -((($x25 * $x75) - $x35) + $x65) = 0.0,
            "e17": -((($x26 * $x76) - $x36) + $x66) = 0.0,
            "e18": -((($x27 * $x77) - $x37) + $x67) = 0.0,
            "e19": -((($x28 * $x78) - $x38) + $x68) = 0.0,
            "e20": -((($x29 * $x79) - $x39) + $x69) = 0.0,
            "e21": -((($x30 * $x80) - $x40) + $x70) = 0.0,
            "e22": ($x1 - (2.0 * $b11)) = -1.0,
            "e23": ($x2 - (2.0 * $b12)) = -1.0,
            "e24": ($x3 - (2.0 * $b13)) = -1.0,
            "e25": ($x4 - (2.0 * $b14)) = -1.0,
            "e26": ($x5 - (2.0 * $b15)) = -1.0,
            "e27": ($x6 - (2.0 * $b16)) = -1.0,
            "e28": ($x7 - (2.0 * $b17)) = -1.0,
            "e29": ($x8 - (2.0 * $b18)) = -1.0,
            "e30": ($x9 - (2.0 * $b19)) = -1.0,
            "e31": ($x10 - (2.0 * $b20)) = -1.0,
            "e32": ((2.0 * $b11) - $x61) <= 2.0,
            "e33": ((2.0 * $b12) - $x62) <= 2.0,
            "e34": ((2.0 * $b13) - $x63) <= 2.0,
            "e35": ((2.0 * $b14) - $x64) <= 2.0,
            "e36": ((2.0 * $b15) - $x65) <= 2.0,
            "e37": ((2.0 * $b16) - $x66) <= 2.0,
            "e38": ((2.0 * $b17) - $x67) <= 2.0,
            "e39": ((2.0 * $b18) - $x68) <= 2.0,
            "e40": ((2.0 * $b19) - $x69) <= 2.0,
            "e41": ((2.0 * $b20) - $x70) <= 2.0,
            "e42": ((2.0 * $b11) - $x61) >= 0.0,
            "e43": ((2.0 * $b12) - $x62) >= 0.0,
            "e44": ((2.0 * $b13) - $x63) >= 0.0,
            "e45": ((2.0 * $b14) - $x64) >= 0.0,
            "e46": ((2.0 * $b15) - $x65) >= 0.0,
            "e47": ((2.0 * $b16) - $x66) >= 0.0,
            "e48": ((2.0 * $b17) - $x67) >= 0.0,
            "e49": ((2.0 * $b18) - $x68) >= 0.0,
            "e50": ((2.0 * $b19) - $x69) >= 0.0,
            "e51": ((2.0 * $b20) - $x70) >= 0.0,
            "e52": (2.0 * $b11) <= 2.0,
            "e53": ((2.0 * $b12) - $x61) <= 2.0,
            "e54": ((2.0 * $b13) - $x62) <= 2.0,
            "e55": ((2.0 * $b14) - $x63) <= 2.0,
            "e56": ((2.0 * $b15) - $x64) <= 2.0,
            "e57": ((2.0 * $b16) - $x65) <= 2.0,
            "e58": ((2.0 * $b17) - $x66) <= 2.0,
            "e59": ((2.0 * $b18) - $x67) <= 2.0,
            "e60": ((2.0 * $b19) - $x68) <= 2.0,
            "e61": ((2.0 * $b20) - $x69) <= 2.0,
            "e62": (2.0 * $b11) >= 0.0,
            "e63": ((2.0 * $b12) - $x61) >= 0.0,
            "e64": ((2.0 * $b13) - $x62) >= 0.0,
            "e65": ((2.0 * $b14) - $x63) >= 0.0,
            "e66": ((2.0 * $b15) - $x64) >= 0.0,
            "e67": ((2.0 * $b16) - $x65) >= 0.0,
            "e68": ((2.0 * $b17) - $x66) >= 0.0,
            "e69": ((2.0 * $b18) - $x67) >= 0.0,
            "e70": ((2.0 * $b19) - $x68) >= 0.0,
            "e71": ((2.0 * $b20) - $x69) >= 0.0,
            "e72": -(($x21 - $x41) + $x42) = 0.0,
            "e73": -(($x22 - $x42) + $x43) = 0.0,
            "e74": -(($x23 - $x43) + $x44) = 0.0,
            "e75": -(($x24 - $x44) + $x45) = 0.0,
            "e76": -(($x25 - $x45) + $x46) = 0.0,
            "e77": -(($x26 - $x46) + $x47) = 0.0,
            "e78": -(($x27 - $x47) + $x48) = 0.0,
            "e79": -(($x28 - $x48) + $x49) = 0.0,
            "e80": -(($x29 - $x49) + $x50) = 0.0,
            "e81": -((($x21 * $x71) - $x31) + $x32) = 0.0,
            "e82": -((($x22 * $x72) - $x32) + $x33) = 0.0,
            "e83": -((($x23 * $x73) - $x33) + $x34) = 0.0,
            "e84": -((($x24 * $x74) - $x34) + $x35) = 0.0,
            "e85": -((($x25 * $x75) - $x35) + $x36) = 0.0,
            "e86": -((($x26 * $x76) - $x36) + $x37) = 0.0,
            "e87": -((($x27 * $x77) - $x37) + $x38) = 0.0,
            "e88": -((($x28 * $x78) - $x38) + $x39) = 0.0,
            "e89": -((($x29 * $x79) - $x39) + $x40) = 0.0,
            "e90": -((($x30 * $x80) - $x40) + $x81) = 0.0,
            "e91": ($x1 + $x71) = 2.0,
            "e92": ($x2 + $x72) = 2.0,
            "e93": ($x3 + $x73) = 2.0,
            "e94": ($x4 + $x74) = 2.0,
            "e95": ($x5 + $x75) = 2.0,
            "e96": ($x6 + $x76) = 2.0,
            "e97": ($x7 + $x77) = 2.0,
            "e98": ($x8 + $x78) = 2.0,
            "e99": ($x9 + $x79) = 2.0,
            "e100": ($x10 + $x80) = 2.0,
            "e101": ((((((((($x21 + $x22) + $x23) + $x24) + $x25) + $x26) + $x27) + $x28) + $x29) + $x30) = 2.0
        }
    }
};


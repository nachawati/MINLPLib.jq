jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/supplychain";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:supplychain($input)
{
    let $x1 := $input.x1
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $b25 := $input.b25
    let $b26 := $input.b26
    let $b27 := $input.b27
    return {
        "obj": (((((((((((((((((((((((((((66.5 * $x1) + (522.5 * $x2)) + (750.5 * $x3)) + (125.6 * $x4)) + (612.3 * $x5)) + (628.0 * $x6)) + (69.0 * $x7)) + (32.2 * $x8)) + (151.8 * $x9)) + (655.2 * $x10)) + (175.5 * $x11)) + (468.0 * $x12)) + (330.0 * $x13)) + (375.0 * $x14)) + (75.0 * $x15)) + (1728.0 * $x16)) + (1190.4 * $x17)) + (172.8 * $x18)) + (24.5108139399735 * $x19)) + (24.5071418162135 * $x20)) + (24.5120378589786 * $x21)) + (0.2352 * $x22)) + (0.2352 * $x23)) + (0.2352 * $x24)) + (100.0 * $b25)) + (100.0 * $b26)) + (100.0 * $b27)),
        "constraints": {
            "e2": (($x1 + $x2) + $x3) = 1.0,
            "e3": (($x4 + $x5) + $x6) = 1.0,
            "e4": (($x7 + $x8) + $x9) = 1.0,
            "e5": (($x10 + $x11) + $x12) = 1.0,
            "e6": (($x13 + $x14) + $x15) = 1.0,
            "e7": (($x16 + $x17) + $x18) = 1.0,
            "e8": ($x1 - $b25) <= 0.0,
            "e9": ($x2 - $b26) <= 0.0,
            "e10": ($x3 - $b27) <= 0.0,
            "e11": ($x4 - $b25) <= 0.0,
            "e12": ($x5 - $b26) <= 0.0,
            "e13": ($x6 - $b27) <= 0.0,
            "e14": ($x7 - $b25) <= 0.0,
            "e15": ($x8 - $b26) <= 0.0,
            "e16": ($x9 - $b27) <= 0.0,
            "e17": ($x10 - $b25) <= 0.0,
            "e18": ($x11 - $b26) <= 0.0,
            "e19": ($x12 - $b27) <= 0.0,
            "e20": ($x13 - $b25) <= 0.0,
            "e21": ($x14 - $b26) <= 0.0,
            "e22": ($x15 - $b27) <= 0.0,
            "e23": ($x16 - $b25) <= 0.0,
            "e24": ($x17 - $b26) <= 0.0,
            "e25": ($x18 - $b27) <= 0.0,
            "e26": -((((((math:pow($x19, 2.0) + (95.0 * $x1)) + (157.0 * $x4)) + (46.0 * $x7)) + (234.0 * $x10)) + (75.0 * $x13)) + (192.0 * $x16)) <= 0.0,
            "e27": -((((((math:pow($x20, 2.0) + (95.0 * $x2)) + (157.0 * $x5)) + (46.0 * $x8)) + (234.0 * $x11)) + (75.0 * $x14)) + (192.0 * $x17)) <= 0.0,
            "e28": -((((((math:pow($x21, 2.0) + (95.0 * $x3)) + (157.0 * $x6)) + (46.0 * $x9)) + (234.0 * $x12)) + (75.0 * $x15)) + (192.0 * $x18)) <= 0.0,
            "e29": -((((((math:pow($x22, 2.0) + (6300.0 * $x1)) + (17500.0 * $x4)) + (4375.0 * $x7)) + (44800.0 * $x10)) + (4375.0 * $x13)) + (44800.0 * $x16)) <= 0.0,
            "e30": -((((((math:pow($x23, 2.0) + (6300.0 * $x2)) + (17500.0 * $x5)) + (4375.0 * $x8)) + (44800.0 * $x11)) + (4375.0 * $x14)) + (44800.0 * $x17)) <= 0.0,
            "e31": -((((((math:pow($x24, 2.0) + (6300.0 * $x3)) + (17500.0 * $x6)) + (4375.0 * $x9)) + (44800.0 * $x12)) + (4375.0 * $x15)) + (44800.0 * $x18)) <= 0.0
        }
    }
};


jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/syn10m";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:syn10m($input)
{
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $b27 := $input.b27
    let $b28 := $input.b28
    let $b29 := $input.b29
    let $b30 := $input.b30
    let $b31 := $input.b31
    let $b32 := $input.b32
    let $b33 := $input.b33
    let $b34 := $input.b34
    let $b35 := $input.b35
    let $b36 := $input.b36
    return {
        "obj": ((((((((((((((((((5.0 * $x8) - (2.0 * $x13)) + (200.0 * $x21)) + (250.0 * $x22)) + (200.0 * $x23)) + (200.0 * $x24)) + (500.0 * $x25)) + (350.0 * $x26)) - (5.0 * $b27)) - (8.0 * $b28)) - (6.0 * $b29)) - (10.0 * $b30)) - (6.0 * $b31)) - (7.0 * $b32)) - (4.0 * $b33)) - (5.0 * $b34)) - (2.0 * $b35)) - (4.0 * $b36)),
        "constraints": {
            "e2": (($x2 - $x3) - $x4) = 0.0,
            "e3": -(($x5 - $x6) + $x7) = 0.0,
            "e4": (($x7 - $x8) - $x9) = 0.0,
            "e5": ((($x9 - $x10) - $x11) - $x12) = 0.0,
            "e6": (($x14 - $x17) - $x18) = 0.0,
            "e7": ((($x16 - $x19) - $x20) - $x21) = 0.0,
            "e8": -((math:log((1.0 + $x3)) + $x5) + $b27) <= 1.0,
            "e9": ($x3 - (10.0 * $b27)) <= 0.0,
            "e10": ($x5 - (2.39789527279837 * $b27)) <= 0.0,
            "e11": -(((1.2 * math:log((1.0 + $x4))) + $x6) + $b28) <= 1.0,
            "e12": ($x4 - (10.0 * $b28)) <= 0.0,
            "e13": ($x6 - (2.87747432735804 * $b28)) <= 0.0,
            "e14": -(((0.75 * $x10) + $x14) + $b29) <= 1.0,
            "e15": -(((0.75 * $x10) + $x14) - $b29) >= -1.0,
            "e16": ($x10 - (2.87747432735804 * $b29)) <= 0.0,
            "e17": ($x14 - (2.15810574551853 * $b29)) <= 0.0,
            "e18": -(((1.5 * math:log((1.0 + $x11))) + $x15) + $b30) <= 1.0,
            "e19": ($x11 - (2.87747432735804 * $b30)) <= 0.0,
            "e20": ($x15 - (2.03277599268042 * $b30)) <= 0.0,
            "e21": -(($x12 + $x16) + $b31) <= 1.0,
            "e22": -(($x12 + $x16) - $b31) >= -1.0,
            "e23": -(((0.5 * $x13) + $x16) + $b31) <= 1.0,
            "e24": -(((0.5 * $x13) + $x16) - $b31) >= -1.0,
            "e25": ($x12 - (2.87747432735804 * $b31)) <= 0.0,
            "e26": ($x13 - (7.0 * $b31)) <= 0.0,
            "e27": ($x16 - (3.5 * $b31)) <= 0.0,
            "e28": -(((1.25 * math:log((1.0 + $x17))) + $x22) + $b32) <= 1.0,
            "e29": ($x17 - (2.15810574551853 * $b32)) <= 0.0,
            "e30": ($x22 - (1.43746550029693 * $b32)) <= 0.0,
            "e31": -(((0.9 * math:log((1.0 + $x18))) + $x23) + $b33) <= 1.0,
            "e32": ($x18 - (2.15810574551853 * $b33)) <= 0.0,
            "e33": ($x23 - (1.03497516021379 * $b33)) <= 0.0,
            "e34": -((math:log((1.0 + $x15)) + $x24) + $b34) <= 1.0,
            "e35": ($x15 - (2.03277599268042 * $b34)) <= 0.0,
            "e36": ($x24 - (1.10947836929589 * $b34)) <= 0.0,
            "e37": -(((0.9 * $x19) + $x25) + $b35) <= 1.0,
            "e38": -(((0.9 * $x19) + $x25) - $b35) >= -1.0,
            "e39": ($x19 - (3.5 * $b35)) <= 0.0,
            "e40": ($x25 - (3.15 * $b35)) <= 0.0,
            "e41": -(((0.6 * $x20) + $x26) + $b36) <= 1.0,
            "e42": -(((0.6 * $x20) + $x26) - $b36) >= -1.0,
            "e43": ($x20 - (3.5 * $b36)) <= 0.0,
            "e44": ($x26 - (2.1 * $b36)) <= 0.0,
            "e45": ($b27 + $b28) = 1.0,
            "e46": -(($b29 + $b32) + $b33) >= 0.0,
            "e47": -($b30 + $b34) >= 0.0,
            "e48": (($b27 + $b28) - $b29) >= 0.0,
            "e49": (($b27 + $b28) - $b30) >= 0.0,
            "e50": (($b27 + $b28) - $b31) >= 0.0,
            "e51": ($b29 - $b32) >= 0.0,
            "e52": ($b29 - $b33) >= 0.0,
            "e53": ($b30 - $b34) >= 0.0,
            "e54": ($b31 - $b35) >= 0.0,
            "e55": ($b31 - $b36) >= 0.0
        }
    }
};


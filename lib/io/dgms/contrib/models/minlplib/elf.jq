jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/elf";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:elf($input)
{
    let $b1 := $input.b1
    let $b2 := $input.b2
    let $b3 := $input.b3
    let $b4 := $input.b4
    let $b5 := $input.b5
    let $b6 := $input.b6
    let $b7 := $input.b7
    let $b8 := $input.b8
    let $b9 := $input.b9
    let $b10 := $input.b10
    let $b11 := $input.b11
    let $b12 := $input.b12
    let $b13 := $input.b13
    let $b14 := $input.b14
    let $b15 := $input.b15
    let $b16 := $input.b16
    let $b17 := $input.b17
    let $b18 := $input.b18
    let $b19 := $input.b19
    let $b20 := $input.b20
    let $b21 := $input.b21
    let $b22 := $input.b22
    let $b23 := $input.b23
    let $b24 := $input.b24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    let $x31 := $input.x31
    let $x32 := $input.x32
    let $x33 := $input.x33
    let $x34 := $input.x34
    let $x35 := $input.x35
    let $x36 := $input.x36
    let $x37 := $input.x37
    let $x38 := $input.x38
    let $x39 := $input.x39
    let $x40 := $input.x40
    let $x41 := $input.x41
    let $x42 := $input.x42
    let $x43 := $input.x43
    let $x44 := $input.x44
    let $x45 := $input.x45
    let $x46 := $input.x46
    let $x47 := $input.x47
    let $x48 := $input.x48
    let $x49 := $input.x49
    let $x50 := $input.x50
    let $x51 := $input.x51
    let $x52 := $input.x52
    let $x53 := $input.x53
    let $x54 := $input.x54
    return {
        "obj": ((((((((((((((((((((((($x25 + $x26) + $x27) + $x28) + $x29) + $x30) + $x31) + $x32) + $x33) + $x34) + $x35) + $x36) + $x37) + $x38) + $x39) + $x40) + $x41) + $x42) + $x43) + $x44) + $x45) + $x46) + $x47) + $x48),
        "constraints": {
            "e1": -((math:pow((8.0 - $x49), 2.0) - (100.0 * $b1)) + $x25) >= -100.0,
            "e2": -((math:pow((8.0 - $x50), 2.0) - (100.0 * $b2)) + $x26) >= -100.0,
            "e3": -((math:pow((8.0 - $x51), 2.0) - (100.0 * $b3)) + $x27) >= -100.0,
            "e4": -((math:pow((8.5 - $x49), 2.0) - (100.0 * $b4)) + $x28) >= -100.0,
            "e5": -((math:pow((8.5 - $x50), 2.0) - (100.0 * $b5)) + $x29) >= -100.0,
            "e6": -((math:pow((8.5 - $x51), 2.0) - (100.0 * $b6)) + $x30) >= -100.0,
            "e7": -((math:pow((8.3 - $x49), 2.0) - (100.0 * $b7)) + $x31) >= -100.0,
            "e8": -((math:pow((8.3 - $x50), 2.0) - (100.0 * $b8)) + $x32) >= -100.0,
            "e9": -((math:pow((8.3 - $x51), 2.0) - (100.0 * $b9)) + $x33) >= -100.0,
            "e10": -((math:pow((8.7 - $x49), 2.0) - (100.0 * $b10)) + $x34) >= -100.0,
            "e11": -((math:pow((8.7 - $x50), 2.0) - (100.0 * $b11)) + $x35) >= -100.0,
            "e12": -((math:pow((8.7 - $x51), 2.0) - (100.0 * $b12)) + $x36) >= -100.0,
            "e13": -((math:pow((8.6 - $x49), 2.0) - (100.0 * $b13)) + $x37) >= -100.0,
            "e14": -((math:pow((8.6 - $x50), 2.0) - (100.0 * $b14)) + $x38) >= -100.0,
            "e15": -((math:pow((8.6 - $x51), 2.0) - (100.0 * $b15)) + $x39) >= -100.0,
            "e16": -((math:pow((9.0 - $x49), 2.0) - (100.0 * $b16)) + $x40) >= -100.0,
            "e17": -((math:pow((9.0 - $x50), 2.0) - (100.0 * $b17)) + $x41) >= -100.0,
            "e18": -((math:pow((9.0 - $x51), 2.0) - (100.0 * $b18)) + $x42) >= -100.0,
            "e19": -((math:pow((9.2 - $x49), 2.0) - (100.0 * $b19)) + $x43) >= -100.0,
            "e20": -((math:pow((9.2 - $x50), 2.0) - (100.0 * $b20)) + $x44) >= -100.0,
            "e21": -((math:pow((9.2 - $x51), 2.0) - (100.0 * $b21)) + $x45) >= -100.0,
            "e22": -((math:pow((9.5 - $x49), 2.0) - (100.0 * $b22)) + $x46) >= -100.0,
            "e23": -((math:pow((9.5 - $x50), 2.0) - (100.0 * $b23)) + $x47) >= -100.0,
            "e24": -((math:pow((9.5 - $x51), 2.0) - (100.0 * $b24)) + $x48) >= -100.0,
            "e25": (($b1 + $b2) + $b3) >= 1.0,
            "e26": (($b4 + $b5) + $b6) >= 1.0,
            "e27": (($b7 + $b8) + $b9) >= 1.0,
            "e28": (($b10 + $b11) + $b12) >= 1.0,
            "e29": (($b13 + $b14) + $b15) >= 1.0,
            "e30": (($b16 + $b17) + $b18) >= 1.0,
            "e31": (($b19 + $b20) + $b21) >= 1.0,
            "e32": (($b22 + $b23) + $b24) >= 1.0,
            "e33": -(((((((($b1 - $b4) - $b7) - $b10) - $b13) - $b16) - $b19) - $b22) + $x52) = 0.0,
            "e34": -(((((((($b2 - $b5) - $b8) - $b11) - $b14) - $b17) - $b20) - $b23) + $x53) = 0.0,
            "e35": -(((((((($b3 - $b6) - $b9) - $b12) - $b15) - $b18) - $b21) - $b24) + $x54) = 0.0,
            "e36": ((((((((($x52 * $x49) - (8.0 * $b1)) - (8.5 * $b4)) - (8.3 * $b7)) - (8.7 * $b10)) - (8.6 * $b13)) - (9.0 * $b16)) - (9.2 * $b19)) - (9.5 * $b22)) = 0.0,
            "e37": ((((((((($x53 * $x50) - (8.0 * $b2)) - (8.5 * $b5)) - (8.3 * $b8)) - (8.7 * $b11)) - (8.6 * $b14)) - (9.0 * $b17)) - (9.2 * $b20)) - (9.5 * $b23)) = 0.0,
            "e38": ((((((((($x54 * $x51) - (8.0 * $b3)) - (8.5 * $b6)) - (8.3 * $b9)) - (8.7 * $b12)) - (8.6 * $b15)) - (9.0 * $b18)) - (9.2 * $b21)) - (9.5 * $b24)) = 0.0
        }
    }
};


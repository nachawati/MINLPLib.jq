jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/st_m1";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:st_m1($input)
{
    let $x1 := $input.x1
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    return {
        "obj": ((((((((((((((((((((((((((((((((((((((((540.792129732 * $x1) - (3.0 * math:pow($x1, 2.0))) - math:pow($x2, 2.0)) + (92.0068003629 * $x2)) - (7.0 * math:pow($x3, 2.0))) - (2390.75252039 * $x3)) - (7.0 * math:pow($x4, 2.0))) - (8085.40130479 * $x4)) - (9.0 * math:pow($x5, 2.0))) - (4627.10173328 * $x5)) - (4.0 * math:pow($x6, 2.0))) - (12452.7098353 * $x6)) - (6.0 * math:pow($x7, 2.0))) + (9419.17874069 * $x7)) - (8.0 * math:pow($x8, 2.0))) + (7689.14130566 * $x8)) - math:pow($x9, 2.0)) - (5154.76865125 * $x9)) - math:pow($x10, 2.0)) - (9814.99860313 * $x10)) - (6.0 * math:pow($x11, 2.0))) - (3701.15304202 * $x11)) - (7.0 * math:pow($x12, 2.0))) + (12818.4489533 * $x12)) - math:pow($x13, 2.0)) - (7825.52846743 * $x13)) - (4.0 * math:pow($x14, 2.0))) - (52.6053189782 * $x14)) - (2.0 * math:pow($x15, 2.0))) + (6727.68114413 * $x15)) - (5.0 * math:pow($x16, 2.0))) + (6093.30280299 * $x16)) - (7.0 * math:pow($x17, 2.0))) - (1139.49658357 * $x17)) - (6.0 * math:pow($x18, 2.0))) + (7666.77668727 * $x18)) - (9.0 * math:pow($x19, 2.0))) + (7371.88647018 * $x19)) - (9.0 * math:pow($x20, 2.0))) - (16412.9116807 * $x20)),
        "constraints": {
            "e1": -(((((((((((((((((((6.0 * $x1) + $x2) + $x3) - (3.0 * $x4)) - (9.0 * $x5)) - (7.0 * $x6)) - $x8) + (3.0 * $x9)) + (7.0 * $x10)) + $x11) + (7.0 * $x12)) + (4.0 * $x13)) - (2.0 * $x14)) - (2.0 * $x15)) + (3.0 * $x16)) + (8.0 * $x17)) - (3.0 * $x18)) - (6.0 * $x19)) - $x20) <= 5.0,
            "e2": -((((((((((((((((((9.0 * $x1) + (3.0 * $x2)) - (8.0 * $x3)) + (3.0 * $x4)) + (3.0 * $x5)) - (5.0 * $x7)) + (9.0 * $x8)) + (5.0 * $x9)) - (2.0 * $x10)) + (6.0 * $x11)) - (7.0 * $x12)) + (9.0 * $x13)) - (7.0 * $x15)) - (7.0 * $x16)) - $x17) - (5.0 * $x18)) + (4.0 * $x19)) + (9.0 * $x20)) <= 8.0,
            "e3": ((((((((((((((((((((4.0 * $x1) - (10.0 * $x2)) + (3.0 * $x3)) + (5.0 * $x4)) + (8.0 * $x5)) + (8.0 * $x6)) - (8.0 * $x7)) - (9.0 * $x8)) + (5.0 * $x9)) + (7.0 * $x10)) - (9.0 * $x11)) - (6.0 * $x12)) - (5.0 * $x13)) - (7.0 * $x14)) + $x15) + (3.0 * $x16)) - (7.0 * $x17)) - (7.0 * $x18)) + (8.0 * $x19)) + (3.0 * $x20)) <= -5.0,
            "e4": ((((((((((((((((((((4.0 * $x1) - (2.0 * $x2)) - (2.0 * $x3)) + (10.0 * $x4)) - (5.0 * $x5)) + (8.0 * $x6)) + (9.0 * $x7)) + (5.0 * $x8)) + (10.0 * $x9)) - (5.0 * $x10)) + $x11) + (4.0 * $x12)) - (6.0 * $x13)) + (2.0 * $x14)) - (5.0 * $x15)) + (2.0 * $x16)) + (9.0 * $x17)) + (6.0 * $x18)) - (5.0 * $x19)) - $x20) <= 49.0,
            "e5": ((((((((((((((((((9.0 * $x1) - (9.0 * $x2)) + (4.0 * $x3)) - (3.0 * $x4)) - $x5) - (9.0 * $x6)) - (9.0 * $x7)) + (5.0 * $x8)) + (8.0 * $x9)) - (2.0 * $x10)) - (7.0 * $x12)) - (4.0 * $x13)) + (7.0 * $x14)) + (6.0 * $x16)) - (2.0 * $x17)) - $x18) + (7.0 * $x19)) + (6.0 * $x20)) <= 17.0,
            "e6": -(((((((((((((((((((2.0 * $x1) - (2.0 * $x2)) + (8.0 * $x3)) - (5.0 * $x4)) + (5.0 * $x5)) + (8.0 * $x6)) + (7.0 * $x8)) - (5.0 * $x9)) + $x10) + (9.0 * $x11)) - (8.0 * $x12)) + (8.0 * $x13)) + (2.0 * $x14)) - $x15) - (5.0 * $x16)) - (7.0 * $x17)) - (3.0 * $x18)) - $x19) + (4.0 * $x20)) <= 22.0,
            "e7": (((((((((((((((4.0 * $x2) + (5.0 * $x3)) + (10.0 * $x4)) - (2.0 * $x7)) - (7.0 * $x8)) - (4.0 * $x9)) - $x10) + (5.0 * $x11)) - (5.0 * $x12)) + (3.0 * $x13)) + (9.0 * $x14)) + (9.0 * $x15)) + (8.0 * $x17)) - $x18) + (4.0 * $x20)) <= 46.0,
            "e8": (((((((((((((((((((7.0 * $x1) + (2.0 * $x2)) - (5.0 * $x3)) + (4.0 * $x4)) - (5.0 * $x5)) - (4.0 * $x7)) - (10.0 * $x8)) - (3.0 * $x9)) - (4.0 * $x10)) + $x11) - (10.0 * $x12)) - (7.0 * $x13)) + $x14) - (7.0 * $x15)) - (2.0 * $x16)) - (8.0 * $x17)) + (6.0 * $x18)) + (2.0 * $x19)) + (10.0 * $x20)) <= -23.0,
            "e9": -(((((((((((((((((((9.0 * $x1) + (9.0 * $x2)) - (9.0 * $x3)) + (5.0 * $x4)) - (5.0 * $x5)) - (4.0 * $x6)) + (8.0 * $x7)) + (4.0 * $x8)) - (6.0 * $x10)) + (8.0 * $x11)) - (2.0 * $x12)) + (4.0 * $x13)) - (7.0 * $x14)) - (6.0 * $x15)) - (6.0 * $x16)) - (7.0 * $x17)) + (9.0 * $x18)) + (6.0 * $x19)) + (9.0 * $x20)) <= 11.0,
            "e10": (((((((((((((((((((3.0 * $x1) + (5.0 * $x2)) + (5.0 * $x3)) + $x4) + (4.0 * $x5)) + (6.0 * $x6)) + (9.0 * $x7)) + (5.0 * $x8)) + (7.0 * $x9)) + (9.0 * $x10)) + (7.0 * $x11)) + (8.0 * $x12)) + (7.0 * $x13)) + (7.0 * $x14)) + (9.0 * $x16)) + (5.0 * $x17)) + (5.0 * $x18)) + $x19) + (7.0 * $x20)) <= 1210.0,
            "e11": (((((((((((((((((((0.123612846515 * $x1) + (0.164817128686 * $x2)) - (0.247225693029 * $x3)) + (0.329634257372 * $x4)) + (0.288429975201 * $x5)) + (0.329634257372 * $x6)) + (0.0412042821715 * $x7)) - (0.288429975201 * $x8)) - (0.0412042821715 * $x9)) + (0.412042821715 * $x10)) - (0.247225693029 * $x11)) - (0.0412042821715 * $x12)) - (0.164817128686 * $x13)) + (0.329634257372 * $x15)) - (0.0412042821715 * $x16)) - (0.0412042821715 * $x17)) + (0.247225693029 * $x18)) - (0.123612846515 * $x19)) - (0.247225693029 * $x20)) <= -5.52216398993
        }
    }
};


jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/ex5_2_5";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:ex5_2_5($input)
{
    let $x1 := $input.x1
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $x7 := $input.x7
    let $x8 := $input.x8
    let $x9 := $input.x9
    let $x10 := $input.x10
    let $x11 := $input.x11
    let $x12 := $input.x12
    let $x13 := $input.x13
    let $x14 := $input.x14
    let $x15 := $input.x15
    let $x16 := $input.x16
    let $x17 := $input.x17
    let $x18 := $input.x18
    let $x19 := $input.x19
    let $x20 := $input.x20
    let $x21 := $input.x21
    let $x22 := $input.x22
    let $x23 := $input.x23
    let $x24 := $input.x24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    let $x31 := $input.x31
    let $x32 := $input.x32
    return {
        "obj": -((((((((((((((((((((((((18.0 - (6.0 * $x1)) - (16.0 * $x4)) - (15.0 * $x7)) - (12.0 * $x10)) * $x18) + (((((18.0 - (6.0 * $x2)) - (16.0 * $x5)) - (15.0 * $x8)) - (12.0 * $x11)) * $x23)) + (((((18.0 - (6.0 * $x3)) - (16.0 * $x6)) - (15.0 * $x9)) - (12.0 * $x12)) * $x28)) + (((((15.0 - (6.0 * $x1)) - (16.0 * $x4)) - (15.0 * $x7)) - (12.0 * $x10)) * $x19)) + (((((15.0 - (6.0 * $x2)) - (16.0 * $x5)) - (15.0 * $x8)) - (12.0 * $x11)) * $x24)) + (((((15.0 - (6.0 * $x3)) - (16.0 * $x6)) - (15.0 * $x9)) - (12.0 * $x12)) * $x29)) + (((((19.0 - (6.0 * $x1)) - (16.0 * $x4)) - (15.0 * $x7)) - (12.0 * $x10)) * $x20)) + (((((19.0 - (6.0 * $x2)) - (16.0 * $x5)) - (15.0 * $x8)) - (12.0 * $x11)) * $x25)) + (((((19.0 - (6.0 * $x3)) - (16.0 * $x6)) - (15.0 * $x9)) - (12.0 * $x12)) * $x30)) + (((((16.0 - (6.0 * $x1)) - (16.0 * $x4)) - (15.0 * $x7)) - (12.0 * $x10)) * $x21)) + (((((16.0 - (6.0 * $x2)) - (16.0 * $x5)) - (15.0 * $x8)) - (12.0 * $x11)) * $x26)) + (((((16.0 - (6.0 * $x3)) - (16.0 * $x6)) - (15.0 * $x9)) - (12.0 * $x12)) * $x31)) + (((((14.0 - (6.0 * $x1)) - (16.0 * $x4)) - (15.0 * $x7)) - (12.0 * $x10)) * $x22)) + (((((14.0 - (6.0 * $x2)) - (16.0 * $x5)) - (15.0 * $x8)) - (12.0 * $x11)) * $x27)) + (((((14.0 - (6.0 * $x3)) - (16.0 * $x6)) - (15.0 * $x9)) - (12.0 * $x12)) * $x32)) - (8.0 * $x13)) - (5.0 * $x14)) - (9.0 * $x15)) - (6.0 * $x16)) - (4.0 * $x17)),
        "constraints": {
            "e2": ((((((((((((((($x7 * $x18) + ($x7 * $x19)) + ($x7 * $x20)) + ($x7 * $x21)) + ($x7 * $x22)) + ($x8 * $x23)) + ($x8 * $x24)) + ($x8 * $x25)) + ($x8 * $x26)) + ($x8 * $x27)) + ($x9 * $x28)) + ($x9 * $x29)) + ($x9 * $x30)) + ($x9 * $x31)) + ($x9 * $x32)) <= 50.0,
            "e3": ((($x13 + $x18) + $x23) + $x28) <= 100.0,
            "e4": ((($x14 + $x19) + $x24) + $x29) <= 200.0,
            "e5": ((($x15 + $x20) + $x25) + $x30) <= 100.0,
            "e6": ((($x16 + $x21) + $x26) + $x31) <= 100.0,
            "e7": ((($x17 + $x22) + $x27) + $x32) <= 100.0,
            "e8": ((((-((((2.5 + (3.0 * $x1)) + $x4) + $x7) + (1.5 * $x10)) * $x18) + (-((((2.5 + (3.0 * $x2)) + $x5) + $x8) + (1.5 * $x11)) * $x23)) + (-((((2.5 + (3.0 * $x3)) + $x6) + $x9) + (1.5 * $x12)) * $x28)) - (0.5 * $x13)) <= 0.0,
            "e9": ((((-((((2.0 + $x1) + (3.0 * $x4)) + (2.5 * $x7)) + (2.5 * $x10)) * $x18) + (-((((2.0 + $x2) + (3.0 * $x5)) + (2.5 * $x8)) + (2.5 * $x11)) * $x23)) + (-((((2.0 + $x3) + (3.0 * $x6)) + (2.5 * $x9)) + (2.5 * $x12)) * $x28)) + (0.5 * $x13)) <= 0.0,
            "e10": ((((-((((1.5 + (3.0 * $x1)) + $x4) + $x7) + (1.5 * $x10)) * $x19) + (-((((1.5 + (3.0 * $x2)) + $x5) + $x8) + (1.5 * $x11)) * $x24)) + (-((((1.5 + (3.0 * $x3)) + $x6) + $x9) + (1.5 * $x12)) * $x29)) + (0.5 * $x14)) <= 0.0,
            "e11": (((-((((2.5 + $x1) + (3.0 * $x4)) + (2.5 * $x7)) + (2.5 * $x10)) * $x19) + (-((((2.5 + $x2) + (3.0 * $x5)) + (2.5 * $x8)) + (2.5 * $x11)) * $x24)) + (-((((2.5 + $x3) + (3.0 * $x6)) + (2.5 * $x9)) + (2.5 * $x12)) * $x29)) <= 0.0,
            "e12": (((-((((2.0 + (3.0 * $x1)) + $x4) + $x7) + (1.5 * $x10)) * $x20) + (-((((2.0 + (3.0 * $x2)) + $x5) + $x8) + (1.5 * $x11)) * $x25)) + (-((((2.0 + (3.0 * $x3)) + $x6) + $x9) + (1.5 * $x12)) * $x30)) <= 0.0,
            "e13": ((((-((((2.6 + $x1) + (3.0 * $x4)) + (2.5 * $x7)) + (2.5 * $x10)) * $x20) + (-((((2.6 + $x2) + (3.0 * $x5)) + (2.5 * $x8)) + (2.5 * $x11)) * $x25)) + (-((((2.6 + $x3) + (3.0 * $x6)) + (2.5 * $x9)) + (2.5 * $x12)) * $x30)) - (0.1 * $x15)) <= 0.0,
            "e14": (((-((((2.0 + (3.0 * $x1)) + $x4) + $x7) + (1.5 * $x10)) * $x21) + (-((((2.0 + (3.0 * $x2)) + $x5) + $x8) + (1.5 * $x11)) * $x26)) + (-((((2.0 + (3.0 * $x3)) + $x6) + $x9) + (1.5 * $x12)) * $x31)) <= 0.0,
            "e15": ((((-((((2.0 + $x1) + (3.0 * $x4)) + (2.5 * $x7)) + (2.5 * $x10)) * $x21) + (-((((2.0 + $x2) + (3.0 * $x5)) + (2.5 * $x8)) + (2.5 * $x11)) * $x26)) + (-((((2.0 + $x3) + (3.0 * $x6)) + (2.5 * $x9)) + (2.5 * $x12)) * $x31)) + (0.5 * $x16)) <= 0.0,
            "e16": (((-((((2.0 + (3.0 * $x1)) + $x4) + $x7) + (1.5 * $x10)) * $x22) + (-((((2.0 + (3.0 * $x2)) + $x5) + $x8) + (1.5 * $x11)) * $x27)) + (-((((2.0 + (3.0 * $x3)) + $x6) + $x9) + (1.5 * $x12)) * $x32)) <= 0.0,
            "e17": ((((-((((2.0 + $x1) + (3.0 * $x4)) + (2.5 * $x7)) + (2.5 * $x10)) * $x22) + (-((((2.0 + $x2) + (3.0 * $x5)) + (2.5 * $x8)) + (2.5 * $x11)) * $x27)) + (-((((2.0 + $x3) + (3.0 * $x6)) + (2.5 * $x9)) + (2.5 * $x12)) * $x32)) + (0.5 * $x17)) <= 0.0,
            "e18": ((($x1 + $x4) + $x7) + $x10) = 1.0,
            "e19": ((($x2 + $x5) + $x8) + $x11) = 1.0,
            "e20": ((($x3 + $x6) + $x9) + $x12) = 1.0
        }
    }
};


jsoniq version "1.0";

module namespace ns = "http://dgms.io/contrib/models/minlplib/clay0203m";

import module namespace math = "http://www.w3.org/2005/xpath-functions/math";

declare function ns:clay0203m($input)
{
    let $x1 := $input.x1
    let $x2 := $input.x2
    let $x3 := $input.x3
    let $x4 := $input.x4
    let $x5 := $input.x5
    let $x6 := $input.x6
    let $b7 := $input.b7
    let $b8 := $input.b8
    let $b9 := $input.b9
    let $b10 := $input.b10
    let $b11 := $input.b11
    let $b12 := $input.b12
    let $b13 := $input.b13
    let $b14 := $input.b14
    let $b15 := $input.b15
    let $b16 := $input.b16
    let $b17 := $input.b17
    let $b18 := $input.b18
    let $b19 := $input.b19
    let $b20 := $input.b20
    let $b21 := $input.b21
    let $b22 := $input.b22
    let $b23 := $input.b23
    let $b24 := $input.b24
    let $x25 := $input.x25
    let $x26 := $input.x26
    let $x27 := $input.x27
    let $x28 := $input.x28
    let $x29 := $input.x29
    let $x30 := $input.x30
    return {
        "obj": ((((((300.0 * $x25) + (240.0 * $x26)) + (100.0 * $x27)) + (300.0 * $x28)) + (240.0 * $x29)) + (100.0 * $x30)),
        "constraints": {
            "e2": -(($x1 + $x2) + $x25) >= 0.0,
            "e3": -(($x1 + $x3) + $x26) >= 0.0,
            "e4": -(($x2 + $x3) + $x27) >= 0.0,
            "e5": (($x1 - $x2) + $x25) >= 0.0,
            "e6": (($x1 - $x3) + $x26) >= 0.0,
            "e7": (($x2 - $x3) + $x27) >= 0.0,
            "e8": -(($x4 + $x5) + $x28) >= 0.0,
            "e9": -(($x4 + $x6) + $x29) >= 0.0,
            "e10": -(($x5 + $x6) + $x30) >= 0.0,
            "e11": (($x4 - $x5) + $x28) >= 0.0,
            "e12": (($x4 - $x6) + $x29) >= 0.0,
            "e13": (($x5 - $x6) + $x30) >= 0.0,
            "e14": (($x1 - $x2) + (46.0 * $b7)) <= 40.0,
            "e15": (($x1 - $x3) + (46.0 * $b8)) <= 42.0,
            "e16": (($x2 - $x3) + (46.0 * $b9)) <= 41.0,
            "e17": -(($x1 + $x2) + (46.0 * $b10)) <= 40.0,
            "e18": -(($x1 + $x3) + (46.0 * $b11)) <= 42.0,
            "e19": -(($x2 + $x3) + (46.0 * $b12)) <= 41.0,
            "e20": (($x4 - $x5) + (81.0 * $b13)) <= 75.5,
            "e21": (($x4 - $x6) + (81.0 * $b14)) <= 76.5,
            "e22": (($x5 - $x6) + (81.0 * $b15)) <= 77.0,
            "e23": -(($x4 + $x5) + (81.0 * $b16)) <= 75.5,
            "e24": -(($x4 + $x6) + (81.0 * $b17)) <= 76.5,
            "e25": -(($x5 + $x6) + (81.0 * $b18)) <= 77.0,
            "e26": ((($b7 + $b10) + $b13) + $b16) = 1.0,
            "e27": ((($b8 + $b11) + $b14) + $b17) = 1.0,
            "e28": ((($b9 + $b12) + $b15) + $b18) = 1.0,
            "e29": ((math:pow(-(17.5 + $x1), 2.0) + math:pow(-(7.0 + $x4), 2.0)) + (6814.0 * $b19)) <= 6850.0,
            "e30": ((math:pow(-(18.5 + $x2), 2.0) + math:pow(-(7.5 + $x5), 2.0)) + (6678.0 * $b20)) <= 6714.0,
            "e31": ((math:pow(-(16.5 + $x3), 2.0) + math:pow(-(8.5 + $x6), 2.0)) + (6958.0 * $b21)) <= 6994.0,
            "e32": ((math:pow(-(52.5 + $x1), 2.0) + math:pow(-(77.0 + $x4), 2.0)) + (6556.0 * $b22)) <= 6581.0,
            "e33": ((math:pow(-(53.5 + $x2), 2.0) + math:pow(-(77.5 + $x5), 2.0)) + (6697.0 * $b23)) <= 6722.0,
            "e34": ((math:pow(-(51.5 + $x3), 2.0) + math:pow(-(78.5 + $x6), 2.0)) + (6985.0 * $b24)) <= 7010.0,
            "e35": ((math:pow(-(17.5 + $x1), 2.0) + math:pow(-(13.0 + $x4), 2.0)) + (5950.0 * $b19)) <= 5986.0,
            "e36": ((math:pow(-(18.5 + $x2), 2.0) + math:pow(-(12.5 + $x5), 2.0)) + (5953.0 * $b20)) <= 5989.0,
            "e37": ((math:pow(-(16.5 + $x3), 2.0) + math:pow(-(11.5 + $x6), 2.0)) + (6517.0 * $b21)) <= 6553.0,
            "e38": ((math:pow(-(52.5 + $x1), 2.0) + math:pow(-(83.0 + $x4), 2.0)) + (7432.0 * $b22)) <= 7457.0,
            "e39": ((math:pow(-(53.5 + $x2), 2.0) + math:pow(-(82.5 + $x5), 2.0)) + (7432.0 * $b23)) <= 7457.0,
            "e40": ((math:pow(-(51.5 + $x3), 2.0) + math:pow(-(81.5 + $x6), 2.0)) + (7432.0 * $b24)) <= 7457.0,
            "e41": ((math:pow(-(12.5 + $x1), 2.0) + math:pow(-(7.0 + $x4), 2.0)) + (7189.0 * $b19)) <= 7225.0,
            "e42": ((math:pow(-(11.5 + $x2), 2.0) + math:pow(-(7.5 + $x5), 2.0)) + (7189.0 * $b20)) <= 7225.0,
            "e43": ((math:pow(-(13.5 + $x3), 2.0) + math:pow(-(8.5 + $x6), 2.0)) + (7189.0 * $b21)) <= 7225.0,
            "e44": ((math:pow(-(47.5 + $x1), 2.0) + math:pow(-(77.0 + $x4), 2.0)) + (6171.0 * $b22)) <= 6196.0,
            "e45": ((math:pow(-(46.5 + $x2), 2.0) + math:pow(-(77.5 + $x5), 2.0)) + (6172.0 * $b23)) <= 6197.0,
            "e46": ((math:pow(-(48.5 + $x3), 2.0) + math:pow(-(78.5 + $x6), 2.0)) + (6748.0 * $b24)) <= 6773.0,
            "e47": ((math:pow(-(12.5 + $x1), 2.0) + math:pow(-(13.0 + $x4), 2.0)) + (6325.0 * $b19)) <= 6361.0,
            "e48": ((math:pow(-(11.5 + $x2), 2.0) + math:pow(-(12.5 + $x5), 2.0)) + (6464.0 * $b20)) <= 6500.0,
            "e49": ((math:pow(-(13.5 + $x3), 2.0) + math:pow(-(11.5 + $x6), 2.0)) + (6748.0 * $b21)) <= 6784.0,
            "e50": ((math:pow(-(47.5 + $x1), 2.0) + math:pow(-(83.0 + $x4), 2.0)) + (7047.0 * $b22)) <= 7072.0,
            "e51": ((math:pow(-(46.5 + $x2), 2.0) + math:pow(-(82.5 + $x5), 2.0)) + (6907.0 * $b23)) <= 6932.0,
            "e52": ((math:pow(-(48.5 + $x3), 2.0) + math:pow(-(81.5 + $x6), 2.0)) + (7195.0 * $b24)) <= 7220.0,
            "e53": ($b19 + $b22) = 1.0,
            "e54": ($b20 + $b23) = 1.0,
            "e55": ($b21 + $b24) = 1.0
        }
    }
};

